{"version":3,"sources":["jquery.fitvids.js","prism.js","infinite-scroll.js"],"names":["$","fn","fitVids","options","head","div","settings","customSelector","ignore","document","getElementById","getElementsByTagName","createElement","innerHTML","appendChild","childNodes","extend","this","each","selectors","push","ignoreList","$allVideos","find","join","not","aspectRatio","videoName","$this","parents","length","tagName","toLowerCase","parent","css","isNaN","attr","parseInt","height","width","_count","wrap","removeAttr","window","jQuery","Zepto","_self","WorkerGlobalScope","self","Prism","e","n","t","r","a","manual","disableWorkerMessageHandler","util","encode","i","type","content","alias","Array","isArray","map","replace","Object","prototype","toString","call","slice","objId","__id","defineProperty","value","clone","l","hasOwnProperty","forEach","getLanguage","exec","className","parentElement","setLanguage","RegExp","classList","add","currentScript","Error","stack","src","isActive","contains","languages","plain","plaintext","text","txt","insertBefore","o","s","u","DFS","plugins","highlightAll","highlightAllUnder","callback","container","selector","hooks","run","elements","apply","querySelectorAll","highlightElement","nodeName","element","language","grammar","code","textContent","highlightedCode","hasAttribute","setAttribute","Worker","c","filename","onmessage","data","postMessage","JSON","stringify","immediateClose","highlight","tokens","tokenize","rest","g","f","h","d","cause","x","v","p","inside","m","lookbehind","y","greedy","k","pattern","global","match","source","b","w","next","A","tail","reach","E","P","L","index","S","O","j","C","N","_","M","W","z","prev","I","all","Token","lastIndex","tag","classes","attributes","addEventListener","parse","close","readyState","defer","requestAnimationFrame","setTimeout","module","exports","markup","comment","prolog","doctype","internal-subset","string","punctuation","doctype-tag","name","cdata","namespace","special-attr","attr-value","attr-name","entity","title","included-cdata","html","mathml","svg","xml","ssml","atom","rss","atrule","rule","selector-function-argument","keyword","url","function","property","important","addInlined","addAttribute","clike","class-name","boolean","number","operator","javascript","regex","regex-source","regex-delimiter","regex-flags","function-variable","parameter","constant","hashbang","template-string","template-punctuation","interpolation","interpolation-punctuation","string-property","literal-property","js","trim","B","csharp","range","named-parameter","type-expression","return-type","constructor-invocation","generic-method","generic","type-list","record-arguments","preprocessor","directive","R","attribute","target","attribute-arguments","F","U","Z","q","format-string","expression","interpolation-string","char","dotnet","cs","aspnet","page-directive","asp-comment","asp-script","bash","environment","variable","shebang","function-name","for-or-select","assign-left","builtin","file-descriptor","shell","macro","macro-name","directive-hash","cpp","raw-string","generic-function","double-colon","base-clause","csv","docker","instruction","dockerfile","git","deleted","inserted","command","coord","commit-sha1","graphql","description","language-markdown","markdown","atom-input","scalar","fragment","definition-mutation","definition-query","property-query","object","filter","indexOf","test","toUpperCase","defineProperties","buildPlaceholders","tokenStack","tokenizePlaceholders","keys","substring","splice","concat","handlebars","delimiter","block","brackets","hbs","mustache","http","request-line","method","request-target","uri","http-version","response-status","status-code","reason-phrase","header","header-value","csp","hpkp","hsts","header-name","application/javascript","application/json","json","application/xml","text/xml","text/html","text/css","text/plain","entry","gitignore","hgignore","npmignore","java","triple-quoted-string","annotation","generics","import","static","null","webmanifest","kotlin","string-literal","label","kt","kts","kusto","verb","datetime","front-matter-block","front-matter","yaml","blockquote","table","table-data-rows","table-data","table-line","table-header-row","table-header","code-block","code-language","hr","list","url-reference","bold","italic","strike","code-snippet","Number","autoloader","Date","valueOf","Math","floor","random","id","loadLanguages","amp","lt","gt","quot","String","fromCodePoint","fromCharCode","md","objectivec","objc","php","package","class-name-definition","function-definition","argument-name","attribute-content","attribute-class-name","powershell","python","string-interpolation","format-spec","conversion-option","decorator","py","cshtml","razor-comment","delegate-operator","razor","jsx","spread","script","script-punctuation","pop","openedBraces","typescript","at","ts","tsx","flags","char-class","char-class-negation","char-class-punctuation","escape","range-punctuation","special-escape","char-set","backreference","group-name","anchor","group","quantifier","alternation","ruby","regex-literal","symbol","method-definition","command-literal","rb","rust","closure-params","closure-punctuation","lifetime-annotation","fragment-specifier","type-definition","module-declaration","sass","atrule-line","variable-line","property-line","scss","placeholder","module-modifier","statement","guid","sln","sql","identifier","swift","directive-name","literal","other-directive","nil","short-argument","omit","wasm","doc-comment","key","yml","getComputedStyle","currentStyle","querySelector","split","style","display","getBoundingClientRect","lines","lineHeights","oneLinerHeight","sizer","Boolean","children","lineNumbers","getLine","getAttribute","resize","assumeViewportIndependence","innerWidth","parentNode","remove","counterReset","feedElement","buffer","ticking","loading","lastScrollY","lastWindowHeight","lastDocumentHeight","nextElement","onPageLoad","status","removeEventListener","onScroll","onResize","response","item","importNode","resNextElement","href","documentElement","scrollHeight","onUpdate","xhr","XMLHttpRequest","responseType","open","send","requestTick","scrollY","innerHeight","passive"],"mappings":"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","file":"pseudo.js","sourcesContent":["/*jshint browser:true */\n/*!\n* FitVids 1.3\n*\n*\n* Copyright 2017, Chris Coyier + Dave Rupert + Ghost Foundation\n* This is an unofficial release, ported by John O'Nolan\n* Credit to Thierry Koblentz - http://www.alistapart.com/articles/creating-intrinsic-ratios-for-video/\n* Released under the MIT license\n*\n*/\n\n;(function( $ ){\n\n  'use strict';\n\n  $.fn.fitVids = function( options ) {\n    var settings = {\n      customSelector: null,\n      ignore: null\n    };\n\n    if(!document.getElementById('fit-vids-style')) {\n      // appendStyles: https://github.com/toddmotto/fluidvids/blob/master/dist/fluidvids.js\n      var head = document.head || document.getElementsByTagName('head')[0];\n      var css = '.fluid-width-video-container{flex-grow: 1;width:100%;}.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}';\n      var div = document.createElement(\"div\");\n      div.innerHTML = '<p>x</p><style id=\"fit-vids-style\">' + css + '</style>';\n      head.appendChild(div.childNodes[1]);\n    }\n\n    if ( options ) {\n      $.extend( settings, options );\n    }\n\n    return this.each(function(){\n      var selectors = [\n        'iframe[src*=\"player.vimeo.com\"]',\n        'iframe[src*=\"youtube.com\"]',\n        'iframe[src*=\"youtube-nocookie.com\"]',\n        'iframe[src*=\"kickstarter.com\"][src*=\"video.html\"]',\n        'object',\n        'embed'\n      ];\n\n      if (settings.customSelector) {\n        selectors.push(settings.customSelector);\n      }\n\n      var ignoreList = '.fitvidsignore';\n\n      if(settings.ignore) {\n        ignoreList = ignoreList + ', ' + settings.ignore;\n      }\n\n      var $allVideos = $(this).find(selectors.join(','));\n      $allVideos = $allVideos.not('object object'); // SwfObj conflict patch\n      $allVideos = $allVideos.not(ignoreList); // Disable FitVids on this video.\n\n      $allVideos.each(function(){\n        var $this = $(this);\n        if($this.parents(ignoreList).length > 0) {\n          return; // Disable FitVids on this video.\n        }\n        if (this.tagName.toLowerCase() === 'embed' && $this.parent('object').length || $this.parent('.fluid-width-video-wrapper').length) { return; }\n        if ((!$this.css('height') && !$this.css('width')) && (isNaN($this.attr('height')) || isNaN($this.attr('width'))))\n        {\n          $this.attr('height', 9);\n          $this.attr('width', 16);\n        }\n        var height = ( this.tagName.toLowerCase() === 'object' || ($this.attr('height') && !isNaN(parseInt($this.attr('height'), 10))) ) ? parseInt($this.attr('height'), 10) : $this.height(),\n            width = !isNaN(parseInt($this.attr('width'), 10)) ? parseInt($this.attr('width'), 10) : $this.width(),\n            aspectRatio = height / width;\n        if(!$this.attr('name')){\n          var videoName = 'fitvid' + $.fn.fitVids._count;\n          $this.attr('name', videoName);\n          $.fn.fitVids._count++;\n        }\n        $this.wrap('<div class=\"fluid-width-video-container\"><div class=\"fluid-width-video-wrapper\"></div></div>').parent('.fluid-width-video-wrapper').css('padding-top', (aspectRatio * 100)+'%');\n        $this.removeAttr('height').removeAttr('width');\n      });\n    });\n  };\n\n  // Internal counter for unique video names.\n  $.fn.fitVids._count = 0;\n\n// Works with either jQuery or Zepto\n})( window.jQuery || window.Zepto );\n","/* PrismJS 1.28.0\nhttps://prismjs.com/download.html#themes=prism-okaidia&languages=markup+css+clike+javascript+aspnet+bash+c+csharp+cpp+csv+docker+git+graphql+handlebars+http+ignore+java+json+kotlin+kusto+markdown+markup-templating+objectivec+php+powershell+python+cshtml+jsx+tsx+regex+ruby+rust+sass+scss+solution-file+sql+swift+typescript+wasm+xml-doc+yaml&plugins=line-numbers */\nvar _self=\"undefined\"!=typeof window?window:\"undefined\"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{},Prism=function(e){var n=/(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i,t=0,r={},a={manual:e.Prism&&e.Prism.manual,disableWorkerMessageHandler:e.Prism&&e.Prism.disableWorkerMessageHandler,util:{encode:function e(n){return n instanceof i?new i(n.type,e(n.content),n.alias):Array.isArray(n)?n.map(e):n.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/\\u00a0/g,\" \")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,\"__id\",{value:++t}),e.__id},clone:function e(n,t){var r,i;switch(t=t||{},a.util.type(n)){case\"Object\":if(i=a.util.objId(n),t[i])return t[i];for(var l in r={},t[i]=r,n)n.hasOwnProperty(l)&&(r[l]=e(n[l],t));return r;case\"Array\":return i=a.util.objId(n),t[i]?t[i]:(r=[],t[i]=r,n.forEach((function(n,a){r[a]=e(n,t)})),r);default:return n}},getLanguage:function(e){for(;e;){var t=n.exec(e.className);if(t)return t[1].toLowerCase();e=e.parentElement}return\"none\"},setLanguage:function(e,t){e.className=e.className.replace(RegExp(n,\"gi\"),\"\"),e.classList.add(\"language-\"+t)},currentScript:function(){if(\"undefined\"==typeof document)return null;if(\"currentScript\"in document)return document.currentScript;try{throw new Error}catch(r){var e=(/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(r.stack)||[])[1];if(e){var n=document.getElementsByTagName(\"script\");for(var t in n)if(n[t].src==e)return n[t]}return null}},isActive:function(e,n,t){for(var r=\"no-\"+n;e;){var a=e.classList;if(a.contains(n))return!0;if(a.contains(r))return!1;e=e.parentElement}return!!t}},languages:{plain:r,plaintext:r,text:r,txt:r,extend:function(e,n){var t=a.util.clone(a.languages[e]);for(var r in n)t[r]=n[r];return t},insertBefore:function(e,n,t,r){var i=(r=r||a.languages)[e],l={};for(var o in i)if(i.hasOwnProperty(o)){if(o==n)for(var s in t)t.hasOwnProperty(s)&&(l[s]=t[s]);t.hasOwnProperty(o)||(l[o]=i[o])}var u=r[e];return r[e]=l,a.languages.DFS(a.languages,(function(n,t){t===u&&n!=e&&(this[n]=l)})),l},DFS:function e(n,t,r,i){i=i||{};var l=a.util.objId;for(var o in n)if(n.hasOwnProperty(o)){t.call(n,o,n[o],r||o);var s=n[o],u=a.util.type(s);\"Object\"!==u||i[l(s)]?\"Array\"!==u||i[l(s)]||(i[l(s)]=!0,e(s,t,o,i)):(i[l(s)]=!0,e(s,t,null,i))}}},plugins:{},highlightAll:function(e,n){a.highlightAllUnder(document,e,n)},highlightAllUnder:function(e,n,t){var r={callback:t,container:e,selector:'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'};a.hooks.run(\"before-highlightall\",r),r.elements=Array.prototype.slice.apply(r.container.querySelectorAll(r.selector)),a.hooks.run(\"before-all-elements-highlight\",r);for(var i,l=0;i=r.elements[l++];)a.highlightElement(i,!0===n,r.callback)},highlightElement:function(n,t,r){var i=a.util.getLanguage(n),l=a.languages[i];a.util.setLanguage(n,i);var o=n.parentElement;o&&\"pre\"===o.nodeName.toLowerCase()&&a.util.setLanguage(o,i);var s={element:n,language:i,grammar:l,code:n.textContent};function u(e){s.highlightedCode=e,a.hooks.run(\"before-insert\",s),s.element.innerHTML=s.highlightedCode,a.hooks.run(\"after-highlight\",s),a.hooks.run(\"complete\",s),r&&r.call(s.element)}if(a.hooks.run(\"before-sanity-check\",s),(o=s.element.parentElement)&&\"pre\"===o.nodeName.toLowerCase()&&!o.hasAttribute(\"tabindex\")&&o.setAttribute(\"tabindex\",\"0\"),!s.code)return a.hooks.run(\"complete\",s),void(r&&r.call(s.element));if(a.hooks.run(\"before-highlight\",s),s.grammar)if(t&&e.Worker){var c=new Worker(a.filename);c.onmessage=function(e){u(e.data)},c.postMessage(JSON.stringify({language:s.language,code:s.code,immediateClose:!0}))}else u(a.highlight(s.code,s.grammar,s.language));else u(a.util.encode(s.code))},highlight:function(e,n,t){var r={code:e,grammar:n,language:t};if(a.hooks.run(\"before-tokenize\",r),!r.grammar)throw new Error('The language \"'+r.language+'\" has no grammar.');return r.tokens=a.tokenize(r.code,r.grammar),a.hooks.run(\"after-tokenize\",r),i.stringify(a.util.encode(r.tokens),r.language)},tokenize:function(e,n){var t=n.rest;if(t){for(var r in t)n[r]=t[r];delete n.rest}var a=new s;return u(a,a.head,e),o(e,a,n,a.head,0),function(e){for(var n=[],t=e.head.next;t!==e.tail;)n.push(t.value),t=t.next;return n}(a)},hooks:{all:{},add:function(e,n){var t=a.hooks.all;t[e]=t[e]||[],t[e].push(n)},run:function(e,n){var t=a.hooks.all[e];if(t&&t.length)for(var r,i=0;r=t[i++];)r(n)}},Token:i};function i(e,n,t,r){this.type=e,this.content=n,this.alias=t,this.length=0|(r||\"\").length}function l(e,n,t,r){e.lastIndex=n;var a=e.exec(t);if(a&&r&&a[1]){var i=a[1].length;a.index+=i,a[0]=a[0].slice(i)}return a}function o(e,n,t,r,s,g){for(var f in t)if(t.hasOwnProperty(f)&&t[f]){var h=t[f];h=Array.isArray(h)?h:[h];for(var d=0;d<h.length;++d){if(g&&g.cause==f+\",\"+d)return;var v=h[d],p=v.inside,m=!!v.lookbehind,y=!!v.greedy,k=v.alias;if(y&&!v.pattern.global){var x=v.pattern.toString().match(/[imsuy]*$/)[0];v.pattern=RegExp(v.pattern.source,x+\"g\")}for(var b=v.pattern||v,w=r.next,A=s;w!==n.tail&&!(g&&A>=g.reach);A+=w.value.length,w=w.next){var E=w.value;if(n.length>e.length)return;if(!(E instanceof i)){var P,L=1;if(y){if(!(P=l(b,A,e,m))||P.index>=e.length)break;var S=P.index,O=P.index+P[0].length,j=A;for(j+=w.value.length;S>=j;)j+=(w=w.next).value.length;if(A=j-=w.value.length,w.value instanceof i)continue;for(var C=w;C!==n.tail&&(j<O||\"string\"==typeof C.value);C=C.next)L++,j+=C.value.length;L--,E=e.slice(A,j),P.index-=A}else if(!(P=l(b,0,E,m)))continue;S=P.index;var N=P[0],_=E.slice(0,S),M=E.slice(S+N.length),W=A+E.length;g&&W>g.reach&&(g.reach=W);var z=w.prev;if(_&&(z=u(n,z,_),A+=_.length),c(n,z,L),w=u(n,z,new i(f,p?a.tokenize(N,p):N,k,N)),M&&u(n,w,M),L>1){var I={cause:f+\",\"+d,reach:W};o(e,n,t,w.prev,A,I),g&&I.reach>g.reach&&(g.reach=I.reach)}}}}}}function s(){var e={value:null,prev:null,next:null},n={value:null,prev:e,next:null};e.next=n,this.head=e,this.tail=n,this.length=0}function u(e,n,t){var r=n.next,a={value:t,prev:n,next:r};return n.next=a,r.prev=a,e.length++,a}function c(e,n,t){for(var r=n.next,a=0;a<t&&r!==e.tail;a++)r=r.next;n.next=r,r.prev=n,e.length-=a}if(e.Prism=a,i.stringify=function e(n,t){if(\"string\"==typeof n)return n;if(Array.isArray(n)){var r=\"\";return n.forEach((function(n){r+=e(n,t)})),r}var i={type:n.type,content:e(n.content,t),tag:\"span\",classes:[\"token\",n.type],attributes:{},language:t},l=n.alias;l&&(Array.isArray(l)?Array.prototype.push.apply(i.classes,l):i.classes.push(l)),a.hooks.run(\"wrap\",i);var o=\"\";for(var s in i.attributes)o+=\" \"+s+'=\"'+(i.attributes[s]||\"\").replace(/\"/g,\"&quot;\")+'\"';return\"<\"+i.tag+' class=\"'+i.classes.join(\" \")+'\"'+o+\">\"+i.content+\"</\"+i.tag+\">\"},!e.document)return e.addEventListener?(a.disableWorkerMessageHandler||e.addEventListener(\"message\",(function(n){var t=JSON.parse(n.data),r=t.language,i=t.code,l=t.immediateClose;e.postMessage(a.highlight(i,a.languages[r],r)),l&&e.close()}),!1),a):a;var g=a.util.currentScript();function f(){a.manual||a.highlightAll()}if(g&&(a.filename=g.src,g.hasAttribute(\"data-manual\")&&(a.manual=!0)),!a.manual){var h=document.readyState;\"loading\"===h||\"interactive\"===h&&g&&g.defer?document.addEventListener(\"DOMContentLoaded\",f):window.requestAnimationFrame?window.requestAnimationFrame(f):window.setTimeout(f,16)}return a}(_self);\"undefined\"!=typeof module&&module.exports&&(module.exports=Prism),\"undefined\"!=typeof global&&(global.Prism=Prism);\nPrism.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\\s\\S])*?-->/,greedy:!0},prolog:{pattern:/<\\?[\\s\\S]+?\\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,greedy:!0,inside:{\"internal-subset\":{pattern:/(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/\"[^\"]*\"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\\]]/,\"doctype-tag\":/^DOCTYPE/i,name:/[^\\s<>'\"]+/}},cdata:{pattern:/<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,greedy:!0},tag:{pattern:/<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,greedy:!0,inside:{tag:{pattern:/^<\\/?[^\\s>\\/]+/,inside:{punctuation:/^<\\/?/,namespace:/^[^\\s>\\/:]+:/}},\"special-attr\":[],\"attr-value\":{pattern:/=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:\"attr-equals\"},{pattern:/^(\\s*)[\"']|[\"']$/,lookbehind:!0}]}},punctuation:/\\/?>/,\"attr-name\":{pattern:/[^\\s>\\/]+/,inside:{namespace:/^[^\\s>\\/:]+:/}}}},entity:[{pattern:/&[\\da-z]{1,8};/i,alias:\"named-entity\"},/&#x?[\\da-f]{1,8};/i]},Prism.languages.markup.tag.inside[\"attr-value\"].inside.entity=Prism.languages.markup.entity,Prism.languages.markup.doctype.inside[\"internal-subset\"].inside=Prism.languages.markup,Prism.hooks.add(\"wrap\",(function(a){\"entity\"===a.type&&(a.attributes.title=a.content.replace(/&amp;/,\"&\"))})),Object.defineProperty(Prism.languages.markup.tag,\"addInlined\",{value:function(a,e){var s={};s[\"language-\"+e]={pattern:/(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,lookbehind:!0,inside:Prism.languages[e]},s.cdata=/^<!\\[CDATA\\[|\\]\\]>$/i;var t={\"included-cdata\":{pattern:/<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,inside:s}};t[\"language-\"+e]={pattern:/[\\s\\S]+/,inside:Prism.languages[e]};var n={};n[a]={pattern:RegExp(\"(<__[^>]*>)(?:<!\\\\[CDATA\\\\[(?:[^\\\\]]|\\\\](?!\\\\]>))*\\\\]\\\\]>|(?!<!\\\\[CDATA\\\\[)[^])*?(?=</__>)\".replace(/__/g,(function(){return a})),\"i\"),lookbehind:!0,greedy:!0,inside:t},Prism.languages.insertBefore(\"markup\",\"cdata\",n)}}),Object.defineProperty(Prism.languages.markup.tag,\"addAttribute\",{value:function(a,e){Prism.languages.markup.tag.inside[\"special-attr\"].push({pattern:RegExp(\"(^|[\\\"'\\\\s])(?:\"+a+\")\\\\s*=\\\\s*(?:\\\"[^\\\"]*\\\"|'[^']*'|[^\\\\s'\\\">=]+(?=[\\\\s>]))\",\"i\"),lookbehind:!0,inside:{\"attr-name\":/^[^\\s=]+/,\"attr-value\":{pattern:/=[\\s\\S]+/,inside:{value:{pattern:/(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,lookbehind:!0,alias:[e,\"language-\"+e],inside:Prism.languages[e]},punctuation:[{pattern:/^=/,alias:\"attr-equals\"},/\"|'/]}}}})}}),Prism.languages.html=Prism.languages.markup,Prism.languages.mathml=Prism.languages.markup,Prism.languages.svg=Prism.languages.markup,Prism.languages.xml=Prism.languages.extend(\"markup\",{}),Prism.languages.ssml=Prism.languages.xml,Prism.languages.atom=Prism.languages.xml,Prism.languages.rss=Prism.languages.xml;\n!function(s){var e=/(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;s.languages.css={comment:/\\/\\*[\\s\\S]*?\\*\\//,atrule:{pattern:RegExp(\"@[\\\\w-](?:[^;{\\\\s\\\"']|\\\\s+(?!\\\\s)|\"+e.source+\")*?(?:;|(?=\\\\s*\\\\{))\"),inside:{rule:/^@[\\w-]+/,\"selector-function-argument\":{pattern:/(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,lookbehind:!0,alias:\"selector\"},keyword:{pattern:/(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,lookbehind:!0}}},url:{pattern:RegExp(\"\\\\burl\\\\((?:\"+e.source+\"|(?:[^\\\\\\\\\\r\\n()\\\"']|\\\\\\\\[^])*)\\\\)\",\"i\"),greedy:!0,inside:{function:/^url/i,punctuation:/^\\(|\\)$/,string:{pattern:RegExp(\"^\"+e.source+\"$\"),alias:\"url\"}}},selector:{pattern:RegExp(\"(^|[{}\\\\s])[^{}\\\\s](?:[^{};\\\"'\\\\s]|\\\\s+(?![\\\\s{])|\"+e.source+\")*(?=\\\\s*\\\\{)\"),lookbehind:!0},string:{pattern:e,greedy:!0},property:{pattern:/(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,lookbehind:!0},important:/!important\\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,lookbehind:!0},punctuation:/[(){};:,]/},s.languages.css.atrule.inside.rest=s.languages.css;var t=s.languages.markup;t&&(t.tag.addInlined(\"style\",\"css\"),t.tag.addAttribute(\"style\",\"css\"))}(Prism);\nPrism.languages.clike={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"class-name\":{pattern:/(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\\\]/}},keyword:/\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,boolean:/\\b(?:false|true)\\b/,function:/\\b\\w+(?=\\()/,number:/\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,punctuation:/[{}[\\];(),.:]/};\nPrism.languages.javascript=Prism.languages.extend(\"clike\",{\"class-name\":[Prism.languages.clike[\"class-name\"],{pattern:/(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\\})\\s*)catch\\b/,lookbehind:!0},{pattern:/(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,lookbehind:!0}],function:/#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,number:{pattern:RegExp(\"(^|[^\\\\w$])(?:NaN|Infinity|0[bB][01]+(?:_[01]+)*n?|0[oO][0-7]+(?:_[0-7]+)*n?|0[xX][\\\\dA-Fa-f]+(?:_[\\\\dA-Fa-f]+)*n?|\\\\d+(?:_\\\\d+)*n|(?:\\\\d+(?:_\\\\d+)*(?:\\\\.(?:\\\\d+(?:_\\\\d+)*)?)?|\\\\.\\\\d+(?:_\\\\d+)*)(?:[Ee][+-]?\\\\d+(?:_\\\\d+)*)?)(?![\\\\w$])\"),lookbehind:!0},operator:/--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/}),Prism.languages.javascript[\"class-name\"][0].pattern=/(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/,Prism.languages.insertBefore(\"javascript\",\"keyword\",{regex:{pattern:RegExp(\"((?:^|[^$\\\\w\\\\xA0-\\\\uFFFF.\\\"'\\\\])\\\\s]|\\\\b(?:return|yield))\\\\s*)/(?:(?:\\\\[(?:[^\\\\]\\\\\\\\\\r\\n]|\\\\\\\\.)*\\\\]|\\\\\\\\.|[^/\\\\\\\\\\\\[\\r\\n])+/[dgimyus]{0,7}|(?:\\\\[(?:[^[\\\\]\\\\\\\\\\r\\n]|\\\\\\\\.|\\\\[(?:[^[\\\\]\\\\\\\\\\r\\n]|\\\\\\\\.|\\\\[(?:[^[\\\\]\\\\\\\\\\r\\n]|\\\\\\\\.)*\\\\])*\\\\])*\\\\]|\\\\\\\\.|[^/\\\\\\\\\\\\[\\r\\n])+/[dgimyus]{0,7}v[dgimyus]{0,7})(?=(?:\\\\s|/\\\\*(?:[^*]|\\\\*(?!/))*\\\\*/)*(?:$|[\\r\\n,.;:})\\\\]]|//))\"),lookbehind:!0,greedy:!0,inside:{\"regex-source\":{pattern:/^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,lookbehind:!0,alias:\"language-regex\",inside:Prism.languages.regex},\"regex-delimiter\":/^\\/|\\/$/,\"regex-flags\":/^[a-z]+$/}},\"function-variable\":{pattern:/#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,alias:\"function\"},parameter:[{pattern:/(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,lookbehind:!0,inside:Prism.languages.javascript}],constant:/\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/}),Prism.languages.insertBefore(\"javascript\",\"string\",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:\"comment\"},\"template-string\":{pattern:/`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,greedy:!0,inside:{\"template-punctuation\":{pattern:/^`|`$/,alias:\"string\"},interpolation:{pattern:/((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,lookbehind:!0,inside:{\"interpolation-punctuation\":{pattern:/^\\$\\{|\\}$/,alias:\"punctuation\"},rest:Prism.languages.javascript}},string:/[\\s\\S]+/}},\"string-property\":{pattern:/((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,lookbehind:!0,greedy:!0,alias:\"property\"}}),Prism.languages.insertBefore(\"javascript\",\"operator\",{\"literal-property\":{pattern:/((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,lookbehind:!0,alias:\"property\"}}),Prism.languages.markup&&(Prism.languages.markup.tag.addInlined(\"script\",\"javascript\"),Prism.languages.markup.tag.addAttribute(\"on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)\",\"javascript\")),Prism.languages.js=Prism.languages.javascript;\n!function(e){function n(e,n){return e.replace(/<<(\\d+)>>/g,(function(e,s){return\"(?:\"+n[+s]+\")\"}))}function s(e,s,a){return RegExp(n(e,s),a||\"\")}function a(e,n){for(var s=0;s<n;s++)e=e.replace(/<<self>>/g,(function(){return\"(?:\"+e+\")\"}));return e.replace(/<<self>>/g,\"[^\\\\s\\\\S]\")}var t=\"bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void\",r=\"class enum interface record struct\",i=\"add alias and ascending async await by descending from(?=\\\\s*(?:\\\\w|$)) get global group into init(?=\\\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\\\s*{)\",o=\"abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield\";function l(e){return\"\\\\b(?:\"+e.trim().replace(/ /g,\"|\")+\")\\\\b\"}var d=l(r),p=RegExp(l(t+\" \"+r+\" \"+i+\" \"+o)),c=l(r+\" \"+i+\" \"+o),u=l(t+\" \"+r+\" \"+o),g=a(\"<(?:[^<>;=+\\\\-*/%&|^]|<<self>>)*>\",2),b=a(\"\\\\((?:[^()]|<<self>>)*\\\\)\",2),h=\"@?\\\\b[A-Za-z_]\\\\w*\\\\b\",f=n(\"<<0>>(?:\\\\s*<<1>>)?\",[h,g]),m=n(\"(?!<<0>>)<<1>>(?:\\\\s*\\\\.\\\\s*<<1>>)*\",[c,f]),k=\"\\\\[\\\\s*(?:,\\\\s*)*\\\\]\",y=n(\"<<0>>(?:\\\\s*(?:\\\\?\\\\s*)?<<1>>)*(?:\\\\s*\\\\?)?\",[m,k]),w=n(\"[^,()<>[\\\\];=+\\\\-*/%&|^]|<<0>>|<<1>>|<<2>>\",[g,b,k]),v=n(\"\\\\(<<0>>+(?:,<<0>>+)+\\\\)\",[w]),x=n(\"(?:<<0>>|<<1>>)(?:\\\\s*(?:\\\\?\\\\s*)?<<2>>)*(?:\\\\s*\\\\?)?\",[v,m,k]),$={keyword:p,punctuation:/[<>()?,.:[\\]]/},_=\"'(?:[^\\r\\n'\\\\\\\\]|\\\\\\\\.|\\\\\\\\[Uux][\\\\da-fA-F]{1,8})'\",B='\"(?:\\\\\\\\.|[^\\\\\\\\\"\\r\\n])*\"';e.languages.csharp=e.languages.extend(\"clike\",{string:[{pattern:s(\"(^|[^$\\\\\\\\])<<0>>\",['@\"(?:\"\"|\\\\\\\\[^]|[^\\\\\\\\\"])*\"(?!\")']),lookbehind:!0,greedy:!0},{pattern:s(\"(^|[^@$\\\\\\\\])<<0>>\",[B]),lookbehind:!0,greedy:!0}],\"class-name\":[{pattern:s(\"(\\\\busing\\\\s+static\\\\s+)<<0>>(?=\\\\s*;)\",[m]),lookbehind:!0,inside:$},{pattern:s(\"(\\\\busing\\\\s+<<0>>\\\\s*=\\\\s*)<<1>>(?=\\\\s*;)\",[h,x]),lookbehind:!0,inside:$},{pattern:s(\"(\\\\busing\\\\s+)<<0>>(?=\\\\s*=)\",[h]),lookbehind:!0},{pattern:s(\"(\\\\b<<0>>\\\\s+)<<1>>\",[d,f]),lookbehind:!0,inside:$},{pattern:s(\"(\\\\bcatch\\\\s*\\\\(\\\\s*)<<0>>\",[m]),lookbehind:!0,inside:$},{pattern:s(\"(\\\\bwhere\\\\s+)<<0>>\",[h]),lookbehind:!0},{pattern:s(\"(\\\\b(?:is(?:\\\\s+not)?|as)\\\\s+)<<0>>\",[y]),lookbehind:!0,inside:$},{pattern:s(\"\\\\b<<0>>(?=\\\\s+(?!<<1>>|with\\\\s*\\\\{)<<2>>(?:\\\\s*[=,;:{)\\\\]]|\\\\s+(?:in|when)\\\\b))\",[x,u,h]),inside:$}],keyword:p,number:/(?:\\b0(?:x[\\da-f_]*[\\da-f]|b[01_]*[01])|(?:\\B\\.\\d+(?:_+\\d+)*|\\b\\d+(?:_+\\d+)*(?:\\.\\d+(?:_+\\d+)*)?)(?:e[-+]?\\d+(?:_+\\d+)*)?)(?:[dflmu]|lu|ul)?\\b/i,operator:/>>=?|<<=?|[-=]>|([-+&|])\\1|~|\\?\\?=?|[-+*/%&|^!=<>]=?/,punctuation:/\\?\\.?|::|[{}[\\];(),.:]/}),e.languages.insertBefore(\"csharp\",\"number\",{range:{pattern:/\\.\\./,alias:\"operator\"}}),e.languages.insertBefore(\"csharp\",\"punctuation\",{\"named-parameter\":{pattern:s(\"([(,]\\\\s*)<<0>>(?=\\\\s*:)\",[h]),lookbehind:!0,alias:\"punctuation\"}}),e.languages.insertBefore(\"csharp\",\"class-name\",{namespace:{pattern:s(\"(\\\\b(?:namespace|using)\\\\s+)<<0>>(?:\\\\s*\\\\.\\\\s*<<0>>)*(?=\\\\s*[;{])\",[h]),lookbehind:!0,inside:{punctuation:/\\./}},\"type-expression\":{pattern:s(\"(\\\\b(?:default|sizeof|typeof)\\\\s*\\\\(\\\\s*(?!\\\\s))(?:[^()\\\\s]|\\\\s(?!\\\\s)|<<0>>)*(?=\\\\s*\\\\))\",[b]),lookbehind:!0,alias:\"class-name\",inside:$},\"return-type\":{pattern:s(\"<<0>>(?=\\\\s+(?:<<1>>\\\\s*(?:=>|[({]|\\\\.\\\\s*this\\\\s*\\\\[)|this\\\\s*\\\\[))\",[x,m]),inside:$,alias:\"class-name\"},\"constructor-invocation\":{pattern:s(\"(\\\\bnew\\\\s+)<<0>>(?=\\\\s*[[({])\",[x]),lookbehind:!0,inside:$,alias:\"class-name\"},\"generic-method\":{pattern:s(\"<<0>>\\\\s*<<1>>(?=\\\\s*\\\\()\",[h,g]),inside:{function:s(\"^<<0>>\",[h]),generic:{pattern:RegExp(g),alias:\"class-name\",inside:$}}},\"type-list\":{pattern:s(\"\\\\b((?:<<0>>\\\\s+<<1>>|record\\\\s+<<1>>\\\\s*<<5>>|where\\\\s+<<2>>)\\\\s*:\\\\s*)(?:<<3>>|<<4>>|<<1>>\\\\s*<<5>>|<<6>>)(?:\\\\s*,\\\\s*(?:<<3>>|<<4>>|<<6>>))*(?=\\\\s*(?:where|[{;]|=>|$))\",[d,f,h,x,p.source,b,\"\\\\bnew\\\\s*\\\\(\\\\s*\\\\)\"]),lookbehind:!0,inside:{\"record-arguments\":{pattern:s(\"(^(?!new\\\\s*\\\\()<<0>>\\\\s*)<<1>>\",[f,b]),lookbehind:!0,greedy:!0,inside:e.languages.csharp},keyword:p,\"class-name\":{pattern:RegExp(x),greedy:!0,inside:$},punctuation:/[,()]/}},preprocessor:{pattern:/(^[\\t ]*)#.*/m,lookbehind:!0,alias:\"property\",inside:{directive:{pattern:/(#)\\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\\b/,lookbehind:!0,alias:\"keyword\"}}}});var E=B+\"|\"+_,R=n(\"/(?![*/])|//[^\\r\\n]*[\\r\\n]|/\\\\*(?:[^*]|\\\\*(?!/))*\\\\*/|<<0>>\",[E]),z=a(n(\"[^\\\"'/()]|<<0>>|\\\\(<<self>>*\\\\)\",[R]),2),S=\"\\\\b(?:assembly|event|field|method|module|param|property|return|type)\\\\b\",j=n(\"<<0>>(?:\\\\s*\\\\(<<1>>*\\\\))?\",[m,z]);e.languages.insertBefore(\"csharp\",\"class-name\",{attribute:{pattern:s(\"((?:^|[^\\\\s\\\\w>)?])\\\\s*\\\\[\\\\s*)(?:<<0>>\\\\s*:\\\\s*)?<<1>>(?:\\\\s*,\\\\s*<<1>>)*(?=\\\\s*\\\\])\",[S,j]),lookbehind:!0,greedy:!0,inside:{target:{pattern:s(\"^<<0>>(?=\\\\s*:)\",[S]),alias:\"keyword\"},\"attribute-arguments\":{pattern:s(\"\\\\(<<0>>*\\\\)\",[z]),inside:e.languages.csharp},\"class-name\":{pattern:RegExp(m),inside:{punctuation:/\\./}},punctuation:/[:,]/}}});var A=\":[^}\\r\\n]+\",F=a(n(\"[^\\\"'/()]|<<0>>|\\\\(<<self>>*\\\\)\",[R]),2),P=n(\"\\\\{(?!\\\\{)(?:(?![}:])<<0>>)*<<1>>?\\\\}\",[F,A]),U=a(n(\"[^\\\"'/()]|/(?!\\\\*)|/\\\\*(?:[^*]|\\\\*(?!/))*\\\\*/|<<0>>|\\\\(<<self>>*\\\\)\",[E]),2),Z=n(\"\\\\{(?!\\\\{)(?:(?![}:])<<0>>)*<<1>>?\\\\}\",[U,A]);function q(n,a){return{interpolation:{pattern:s(\"((?:^|[^{])(?:\\\\{\\\\{)*)<<0>>\",[n]),lookbehind:!0,inside:{\"format-string\":{pattern:s(\"(^\\\\{(?:(?![}:])<<0>>)*)<<1>>(?=\\\\}$)\",[a,A]),lookbehind:!0,inside:{punctuation:/^:/}},punctuation:/^\\{|\\}$/,expression:{pattern:/[\\s\\S]+/,alias:\"language-csharp\",inside:e.languages.csharp}}},string:/[\\s\\S]+/}}e.languages.insertBefore(\"csharp\",\"string\",{\"interpolation-string\":[{pattern:s('(^|[^\\\\\\\\])(?:\\\\$@|@\\\\$)\"(?:\"\"|\\\\\\\\[^]|\\\\{\\\\{|<<0>>|[^\\\\\\\\{\"])*\"',[P]),lookbehind:!0,greedy:!0,inside:q(P,F)},{pattern:s('(^|[^@\\\\\\\\])\\\\$\"(?:\\\\\\\\.|\\\\{\\\\{|<<0>>|[^\\\\\\\\\"{])*\"',[Z]),lookbehind:!0,greedy:!0,inside:q(Z,U)}],char:{pattern:RegExp(_),greedy:!0}}),e.languages.dotnet=e.languages.cs=e.languages.csharp}(Prism);\nPrism.languages.aspnet=Prism.languages.extend(\"markup\",{\"page-directive\":{pattern:/<%\\s*@.*%>/,alias:\"tag\",inside:{\"page-directive\":{pattern:/<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,alias:\"tag\"},rest:Prism.languages.markup.tag.inside}},directive:{pattern:/<%.*%>/,alias:\"tag\",inside:{directive:{pattern:/<%\\s*?[$=%#:]{0,2}|%>/,alias:\"tag\"},rest:Prism.languages.csharp}}}),Prism.languages.aspnet.tag.pattern=/<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/,Prism.languages.insertBefore(\"inside\",\"punctuation\",{directive:Prism.languages.aspnet.directive},Prism.languages.aspnet.tag.inside[\"attr-value\"]),Prism.languages.insertBefore(\"aspnet\",\"comment\",{\"asp-comment\":{pattern:/<%--[\\s\\S]*?--%>/,alias:[\"asp\",\"comment\"]}}),Prism.languages.insertBefore(\"aspnet\",Prism.languages.javascript?\"script\":\"tag\",{\"asp-script\":{pattern:/(<script(?=.*runat=['\"]?server\\b)[^>]*>)[\\s\\S]*?(?=<\\/script>)/i,lookbehind:!0,alias:[\"asp\",\"script\"],inside:Prism.languages.csharp||{}}});\n!function(e){var t=\"\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b\",n={pattern:/(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,lookbehind:!0,alias:\"punctuation\",inside:null},a={bash:n,environment:{pattern:RegExp(\"\\\\$\"+t),alias:\"constant\"},variable:[{pattern:/\\$?\\(\\([\\s\\S]+?\\)\\)/,greedy:!0,inside:{variable:[{pattern:/(^\\$\\(\\([\\s\\S]+)\\)\\)/,lookbehind:!0},/^\\$\\(\\(/],number:/\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,operator:/--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,punctuation:/\\(\\(?|\\)\\)?|,|;/}},{pattern:/\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,greedy:!0,inside:{variable:/^\\$\\(|^`|\\)$|`$/}},{pattern:/\\$\\{[^}]+\\}/,greedy:!0,inside:{operator:/:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,punctuation:/[\\[\\]]/,environment:{pattern:RegExp(\"(\\\\{)\"+t),lookbehind:!0,alias:\"constant\"}}},/\\$(?:\\w+|[#?*!@$])/],entity:/\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/};e.languages.bash={shebang:{pattern:/^#!\\s*\\/.*/,alias:\"important\"},comment:{pattern:/(^|[^\"{\\\\$])#.*/,lookbehind:!0},\"function-name\":[{pattern:/(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,lookbehind:!0,alias:\"function\"},{pattern:/\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,alias:\"function\"}],\"for-or-select\":{pattern:/(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,alias:\"variable\",lookbehind:!0},\"assign-left\":{pattern:/(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,inside:{environment:{pattern:RegExp(\"(^|[\\\\s;|&]|[<>]\\\\()\"+t),lookbehind:!0,alias:\"constant\"}},alias:\"variable\",lookbehind:!0},string:[{pattern:/((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,lookbehind:!0,greedy:!0,inside:a},{pattern:/((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,lookbehind:!0,greedy:!0,inside:{bash:n}},{pattern:/(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,lookbehind:!0,greedy:!0,inside:a},{pattern:/(^|[^$\\\\])'[^']*'/,lookbehind:!0,greedy:!0},{pattern:/\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,greedy:!0,inside:{entity:a.entity}}],environment:{pattern:RegExp(\"\\\\$?\"+t),alias:\"constant\"},variable:a.variable,function:{pattern:/(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cargo|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,lookbehind:!0},builtin:{pattern:/(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,lookbehind:!0,alias:\"class-name\"},boolean:{pattern:/(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,lookbehind:!0},\"file-descriptor\":{pattern:/\\B&\\d\\b/,alias:\"important\"},operator:{pattern:/\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,inside:{\"file-descriptor\":{pattern:/^\\d/,alias:\"important\"}}},punctuation:/\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,number:{pattern:/(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,lookbehind:!0}},n.inside=e.languages.bash;for(var o=[\"comment\",\"function-name\",\"for-or-select\",\"assign-left\",\"string\",\"environment\",\"function\",\"keyword\",\"builtin\",\"boolean\",\"file-descriptor\",\"operator\",\"punctuation\",\"number\"],s=a.variable[1].inside,i=0;i<o.length;i++)s[o[i]]=e.languages.bash[o[i]];e.languages.shell=e.languages.bash}(Prism);\nPrism.languages.c=Prism.languages.extend(\"clike\",{comment:{pattern:/\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,greedy:!0},string:{pattern:/\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,greedy:!0},\"class-name\":{pattern:/(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,lookbehind:!0},keyword:/\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,function:/\\b[a-z_]\\w*(?=\\s*\\()/i,number:/(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,operator:/>>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/}),Prism.languages.insertBefore(\"c\",\"string\",{char:{pattern:/'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,greedy:!0}}),Prism.languages.insertBefore(\"c\",\"string\",{macro:{pattern:/(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0,greedy:!0,alias:\"property\",inside:{string:[{pattern:/^(#\\s*include\\s*)<[^>]+>/,lookbehind:!0},Prism.languages.c.string],char:Prism.languages.c.char,comment:Prism.languages.c.comment,\"macro-name\":[{pattern:/(^#\\s*define\\s+)\\w+\\b(?!\\()/i,lookbehind:!0},{pattern:/(^#\\s*define\\s+)\\w+\\b(?=\\()/i,lookbehind:!0,alias:\"function\"}],directive:{pattern:/^(#\\s*)[a-z]+/,lookbehind:!0,alias:\"keyword\"},\"directive-hash\":/^#/,punctuation:/##|\\\\(?=[\\r\\n])/,expression:{pattern:/\\S[\\s\\S]*/,inside:Prism.languages.c}}}}),Prism.languages.insertBefore(\"c\",\"function\",{constant:/\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/}),delete Prism.languages.c.boolean;\n!function(e){var t=/\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,n=\"\\\\b(?!<keyword>)\\\\w+(?:\\\\s*\\\\.\\\\s*\\\\w+)*\\\\b\".replace(/<keyword>/g,(function(){return t.source}));e.languages.cpp=e.languages.extend(\"c\",{\"class-name\":[{pattern:RegExp(\"(\\\\b(?:class|concept|enum|struct|typename)\\\\s+)(?!<keyword>)\\\\w+\".replace(/<keyword>/g,(function(){return t.source}))),lookbehind:!0},/\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/,/\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i,/\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],keyword:t,number:{pattern:/(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,greedy:!0},operator:/>>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,boolean:/\\b(?:false|true)\\b/}),e.languages.insertBefore(\"cpp\",\"string\",{module:{pattern:RegExp('(\\\\b(?:import|module)\\\\s+)(?:\"(?:\\\\\\\\(?:\\r\\n|[^])|[^\"\\\\\\\\\\r\\n])*\"|<[^<>\\r\\n]*>|'+\"<mod-name>(?:\\\\s*:\\\\s*<mod-name>)?|:\\\\s*<mod-name>\".replace(/<mod-name>/g,(function(){return n}))+\")\"),lookbehind:!0,greedy:!0,inside:{string:/^[<\"][\\s\\S]+/,operator:/:/,punctuation:/\\./}},\"raw-string\":{pattern:/R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,alias:\"string\",greedy:!0}}),e.languages.insertBefore(\"cpp\",\"keyword\",{\"generic-function\":{pattern:/\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,inside:{function:/^\\w+/,generic:{pattern:/<[\\s\\S]+/,alias:\"class-name\",inside:e.languages.cpp}}}}),e.languages.insertBefore(\"cpp\",\"operator\",{\"double-colon\":{pattern:/::/,alias:\"punctuation\"}}),e.languages.insertBefore(\"cpp\",\"class-name\",{\"base-clause\":{pattern:/(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,lookbehind:!0,greedy:!0,inside:e.languages.extend(\"cpp\",{})}}),e.languages.insertBefore(\"inside\",\"double-colon\",{\"class-name\":/\\b[a-z_]\\w*\\b(?!\\s*::)/i},e.languages.cpp[\"base-clause\"])}(Prism);\nPrism.languages.csv={value:/[^\\r\\n,\"]+|\"(?:[^\"]|\"\")*\"(?!\")/,punctuation:/,/};\n!function(e){var n=\"(?:[ \\t]+(?![ \\t])(?:<SP_BS>)?|<SP_BS>)\".replace(/<SP_BS>/g,(function(){return\"\\\\\\\\[\\r\\n](?:\\\\s|\\\\\\\\[\\r\\n]|#.*(?!.))*(?![\\\\s#]|\\\\\\\\[\\r\\n])\"})),r=\"\\\"(?:[^\\\"\\\\\\\\\\r\\n]|\\\\\\\\(?:\\r\\n|[^]))*\\\"|'(?:[^'\\\\\\\\\\r\\n]|\\\\\\\\(?:\\r\\n|[^]))*'\",t=\"--[\\\\w-]+=(?:<STR>|(?![\\\"'])(?:[^\\\\s\\\\\\\\]|\\\\\\\\.)+)\".replace(/<STR>/g,(function(){return r})),o={pattern:RegExp(r),greedy:!0},i={pattern:/(^[ \\t]*)#.*/m,lookbehind:!0,greedy:!0};function a(e,r){return e=e.replace(/<OPT>/g,(function(){return t})).replace(/<SP>/g,(function(){return n})),RegExp(e,r)}e.languages.docker={instruction:{pattern:/(^[ \\t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)(?:\\\\.|[^\\r\\n\\\\])*(?:\\\\$(?:\\s|#.*$)*(?![\\s#])(?:\\\\.|[^\\r\\n\\\\])*)*/im,lookbehind:!0,greedy:!0,inside:{options:{pattern:a(\"(^(?:ONBUILD<SP>)?\\\\w+<SP>)<OPT>(?:<SP><OPT>)*\",\"i\"),lookbehind:!0,greedy:!0,inside:{property:{pattern:/(^|\\s)--[\\w-]+/,lookbehind:!0},string:[o,{pattern:/(=)(?![\"'])(?:[^\\s\\\\]|\\\\.)+/,lookbehind:!0}],operator:/\\\\$/m,punctuation:/=/}},keyword:[{pattern:a(\"(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\\\\b\",\"i\"),lookbehind:!0,greedy:!0},{pattern:a(\"(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \\t\\\\\\\\]+<SP>)AS\",\"i\"),lookbehind:!0,greedy:!0},{pattern:a(\"(^ONBUILD<SP>)\\\\w+\",\"i\"),lookbehind:!0,greedy:!0},{pattern:/^\\w+/,greedy:!0}],comment:i,string:o,variable:/\\$(?:\\w+|\\{[^{}\"'\\\\]*\\})/,operator:/\\\\$/m}},comment:i},e.languages.dockerfile=e.languages.docker}(Prism);\nPrism.languages.git={comment:/^#.*/m,deleted:/^[-–].*/m,inserted:/^\\+.*/m,string:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,command:{pattern:/^.*\\$ git .*$/m,inside:{parameter:/\\s--?\\w+/}},coord:/^@@.*@@$/m,\"commit-sha1\":/^commit \\w{40}$/m};\nPrism.languages.graphql={comment:/#.*/,description:{pattern:/(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,greedy:!0,alias:\"string\",inside:{\"language-markdown\":{pattern:/(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,lookbehind:!0,inside:Prism.languages.markdown}}},string:{pattern:/\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,greedy:!0},number:/(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,boolean:/\\b(?:false|true)\\b/,variable:/\\$[a-z_]\\w*/i,directive:{pattern:/@[a-z_]\\w*/i,alias:\"function\"},\"attr-name\":{pattern:/\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,greedy:!0},\"atom-input\":{pattern:/\\b[A-Z]\\w*Input\\b/,alias:\"class-name\"},scalar:/\\b(?:Boolean|Float|ID|Int|String)\\b/,constant:/\\b[A-Z][A-Z_\\d]*\\b/,\"class-name\":{pattern:/(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,lookbehind:!0},fragment:{pattern:/(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,lookbehind:!0,alias:\"function\"},\"definition-mutation\":{pattern:/(\\bmutation\\s+)[a-zA-Z_]\\w*/,lookbehind:!0,alias:\"function\"},\"definition-query\":{pattern:/(\\bquery\\s+)[a-zA-Z_]\\w*/,lookbehind:!0,alias:\"function\"},keyword:/\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,operator:/[!=|&]|\\.{3}/,\"property-query\":/\\w+(?=\\s*\\()/,object:/\\w+(?=\\s*\\{)/,punctuation:/[!(){}\\[\\]:=,]/,property:/\\w+/},Prism.hooks.add(\"after-tokenize\",(function(n){if(\"graphql\"===n.language)for(var t=n.tokens.filter((function(n){return\"string\"!=typeof n&&\"comment\"!==n.type&&\"scalar\"!==n.type})),e=0;e<t.length;){var a=t[e++];if(\"keyword\"===a.type&&\"mutation\"===a.content){var r=[];if(c([\"definition-mutation\",\"punctuation\"])&&\"(\"===l(1).content){e+=2;var i=f(/^\\($/,/^\\)$/);if(-1===i)continue;for(;e<i;e++){var o=l(0);\"variable\"===o.type&&(b(o,\"variable-input\"),r.push(o.content))}e=i+1}if(c([\"punctuation\",\"property-query\"])&&\"{\"===l(0).content&&(e++,b(l(0),\"property-mutation\"),r.length>0)){var s=f(/^\\{$/,/^\\}$/);if(-1===s)continue;for(var u=e;u<s;u++){var p=t[u];\"variable\"===p.type&&r.indexOf(p.content)>=0&&b(p,\"variable-input\")}}}}function l(n){return t[e+n]}function c(n,t){t=t||0;for(var e=0;e<n.length;e++){var a=l(e+t);if(!a||a.type!==n[e])return!1}return!0}function f(n,a){for(var r=1,i=e;i<t.length;i++){var o=t[i],s=o.content;if(\"punctuation\"===o.type&&\"string\"==typeof s)if(n.test(s))r++;else if(a.test(s)&&0==--r)return i}return-1}function b(n,t){var e=n.alias;e?Array.isArray(e)||(n.alias=e=[e]):n.alias=e=[],e.push(t)}}));\n!function(e){function n(e,n){return\"___\"+e.toUpperCase()+n+\"___\"}Object.defineProperties(e.languages[\"markup-templating\"]={},{buildPlaceholders:{value:function(t,a,r,o){if(t.language===a){var c=t.tokenStack=[];t.code=t.code.replace(r,(function(e){if(\"function\"==typeof o&&!o(e))return e;for(var r,i=c.length;-1!==t.code.indexOf(r=n(a,i));)++i;return c[i]=e,r})),t.grammar=e.languages.markup}}},tokenizePlaceholders:{value:function(t,a){if(t.language===a&&t.tokenStack){t.grammar=e.languages[a];var r=0,o=Object.keys(t.tokenStack);!function c(i){for(var u=0;u<i.length&&!(r>=o.length);u++){var g=i[u];if(\"string\"==typeof g||g.content&&\"string\"==typeof g.content){var l=o[r],s=t.tokenStack[l],f=\"string\"==typeof g?g:g.content,p=n(a,l),k=f.indexOf(p);if(k>-1){++r;var m=f.substring(0,k),d=new e.Token(a,e.tokenize(s,t.grammar),\"language-\"+a,s),h=f.substring(k+p.length),v=[];m&&v.push.apply(v,c([m])),v.push(d),h&&v.push.apply(v,c([h])),\"string\"==typeof g?i.splice.apply(i,[u,1].concat(v)):g.content=v}}else g.content&&c(g.content)}return i}(t.tokens)}}}})}(Prism);\n!function(a){a.languages.handlebars={comment:/\\{\\{![\\s\\S]*?\\}\\}/,delimiter:{pattern:/^\\{\\{\\{?|\\}\\}\\}?$/,alias:\"punctuation\"},string:/([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,number:/\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,boolean:/\\b(?:false|true)\\b/,block:{pattern:/^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,lookbehind:!0,alias:\"keyword\"},brackets:{pattern:/\\[[^\\]]+\\]/,inside:{punctuation:/\\[|\\]/,variable:/[\\s\\S]+/}},punctuation:/[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,variable:/[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/},a.hooks.add(\"before-tokenize\",(function(e){a.languages[\"markup-templating\"].buildPlaceholders(e,\"handlebars\",/\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g)})),a.hooks.add(\"after-tokenize\",(function(e){a.languages[\"markup-templating\"].tokenizePlaceholders(e,\"handlebars\")})),a.languages.hbs=a.languages.handlebars,a.languages.mustache=a.languages.handlebars}(Prism);\n!function(t){function a(t){return RegExp(\"(^(?:\"+t+\"):[ \\t]*(?![ \\t]))[^]+\",\"i\")}t.languages.http={\"request-line\":{pattern:/^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\\s(?:https?:\\/\\/|\\/)\\S*\\sHTTP\\/[\\d.]+/m,inside:{method:{pattern:/^[A-Z]+\\b/,alias:\"property\"},\"request-target\":{pattern:/^(\\s)(?:https?:\\/\\/|\\/)\\S*(?=\\s)/,lookbehind:!0,alias:\"url\",inside:t.languages.uri},\"http-version\":{pattern:/^(\\s)HTTP\\/[\\d.]+/,lookbehind:!0,alias:\"property\"}}},\"response-status\":{pattern:/^HTTP\\/[\\d.]+ \\d+ .+/m,inside:{\"http-version\":{pattern:/^HTTP\\/[\\d.]+/,alias:\"property\"},\"status-code\":{pattern:/^(\\s)\\d+(?=\\s)/,lookbehind:!0,alias:\"number\"},\"reason-phrase\":{pattern:/^(\\s).+/,lookbehind:!0,alias:\"string\"}}},header:{pattern:/^[\\w-]+:.+(?:(?:\\r\\n?|\\n)[ \\t].+)*/m,inside:{\"header-value\":[{pattern:a(\"Content-Security-Policy\"),lookbehind:!0,alias:[\"csp\",\"languages-csp\"],inside:t.languages.csp},{pattern:a(\"Public-Key-Pins(?:-Report-Only)?\"),lookbehind:!0,alias:[\"hpkp\",\"languages-hpkp\"],inside:t.languages.hpkp},{pattern:a(\"Strict-Transport-Security\"),lookbehind:!0,alias:[\"hsts\",\"languages-hsts\"],inside:t.languages.hsts},{pattern:a(\"[^:]+\"),lookbehind:!0}],\"header-name\":{pattern:/^[^:]+/,alias:\"keyword\"},punctuation:/^:/}}};var e,n=t.languages,s={\"application/javascript\":n.javascript,\"application/json\":n.json||n.javascript,\"application/xml\":n.xml,\"text/xml\":n.xml,\"text/html\":n.html,\"text/css\":n.css,\"text/plain\":n.plain},i={\"application/json\":!0,\"application/xml\":!0};function r(t){var a=t.replace(/^[a-z]+\\//,\"\");return\"(?:\"+t+\"|\\\\w+/(?:[\\\\w.-]+\\\\+)+\"+a+\"(?![+\\\\w.-]))\"}for(var p in s)if(s[p]){e=e||{};var l=i[p]?r(p):p;e[p.replace(/\\//g,\"-\")]={pattern:RegExp(\"(content-type:\\\\s*\"+l+\"(?:(?:\\r\\n?|\\n)[\\\\w-].*)*(?:\\r(?:\\n|(?!\\n))|\\n))[^ \\t\\\\w-][^]*\",\"i\"),lookbehind:!0,inside:s[p]}}e&&t.languages.insertBefore(\"http\",\"header\",e)}(Prism);\n!function(n){n.languages.ignore={comment:/^#.*/m,entry:{pattern:/\\S(?:.*(?:(?:\\\\ )|\\S))?/,alias:\"string\",inside:{operator:/^!|\\*\\*?|\\?/,regex:{pattern:/(^|[^\\\\])\\[[^\\[\\]]*\\]/,lookbehind:!0},punctuation:/\\//}}},n.languages.gitignore=n.languages.ignore,n.languages.hgignore=n.languages.ignore,n.languages.npmignore=n.languages.ignore}(Prism);\n!function(e){var n=/\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\\s*[(){}[\\]<>=%~.:,;?+\\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/,t=\"(?:[a-z]\\\\w*\\\\s*\\\\.\\\\s*)*(?:[A-Z]\\\\w*\\\\s*\\\\.\\\\s*)*\",s={pattern:RegExp(\"(^|[^\\\\w.])\"+t+\"[A-Z](?:[\\\\d_A-Z]*[a-z]\\\\w*)?\\\\b\"),lookbehind:!0,inside:{namespace:{pattern:/^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,inside:{punctuation:/\\./}},punctuation:/\\./}};e.languages.java=e.languages.extend(\"clike\",{string:{pattern:/(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,lookbehind:!0,greedy:!0},\"class-name\":[s,{pattern:RegExp(\"(^|[^\\\\w.])\"+t+\"[A-Z]\\\\w*(?=\\\\s+\\\\w+\\\\s*[;,=()]|\\\\s*(?:\\\\[[\\\\s,]*\\\\]\\\\s*)?::\\\\s*new\\\\b)\"),lookbehind:!0,inside:s.inside},{pattern:RegExp(\"(\\\\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\\\\s+)\"+t+\"[A-Z]\\\\w*\\\\b\"),lookbehind:!0,inside:s.inside}],keyword:n,function:[e.languages.clike.function,{pattern:/(::\\s*)[a-z_]\\w*/,lookbehind:!0}],number:/\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,operator:{pattern:/(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,lookbehind:!0}}),e.languages.insertBefore(\"java\",\"string\",{\"triple-quoted-string\":{pattern:/\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,greedy:!0,alias:\"string\"},char:{pattern:/'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,greedy:!0}}),e.languages.insertBefore(\"java\",\"class-name\",{annotation:{pattern:/(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,lookbehind:!0,alias:\"punctuation\"},generics:{pattern:/<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,inside:{\"class-name\":s,keyword:n,punctuation:/[<>(),.:]/,operator:/[?&|]/}},import:[{pattern:RegExp(\"(\\\\bimport\\\\s+)\"+t+\"(?:[A-Z]\\\\w*|\\\\*)(?=\\\\s*;)\"),lookbehind:!0,inside:{namespace:s.inside.namespace,punctuation:/\\./,operator:/\\*/,\"class-name\":/\\w+/}},{pattern:RegExp(\"(\\\\bimport\\\\s+static\\\\s+)\"+t+\"(?:\\\\w+|\\\\*)(?=\\\\s*;)\"),lookbehind:!0,alias:\"static\",inside:{namespace:s.inside.namespace,static:/\\b\\w+$/,punctuation:/\\./,operator:/\\*/,\"class-name\":/\\w+/}}],namespace:{pattern:RegExp(\"(\\\\b(?:exports|import(?:\\\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\\\s+)(?!<keyword>)[a-z]\\\\w*(?:\\\\.[a-z]\\\\w*)*\\\\.?\".replace(/<keyword>/g,(function(){return n.source}))),lookbehind:!0,inside:{punctuation:/\\./}}})}(Prism);\nPrism.languages.json={property:{pattern:/(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,lookbehind:!0,greedy:!0},string:{pattern:/(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,lookbehind:!0,greedy:!0},comment:{pattern:/\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,greedy:!0},number:/-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,punctuation:/[{}[\\],]/,operator:/:/,boolean:/\\b(?:false|true)\\b/,null:{pattern:/\\bnull\\b/,alias:\"keyword\"}},Prism.languages.webmanifest=Prism.languages.json;\n!function(n){n.languages.kotlin=n.languages.extend(\"clike\",{keyword:{pattern:/(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,lookbehind:!0},function:[{pattern:/(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,greedy:!0},{pattern:/(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,lookbehind:!0,greedy:!0}],number:/\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,operator:/\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/}),delete n.languages.kotlin[\"class-name\"];var e={\"interpolation-punctuation\":{pattern:/^\\$\\{?|\\}$/,alias:\"punctuation\"},expression:{pattern:/[\\s\\S]+/,inside:n.languages.kotlin}};n.languages.insertBefore(\"kotlin\",\"string\",{\"string-literal\":[{pattern:/\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,alias:\"multiline\",inside:{interpolation:{pattern:/\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,inside:e},string:/[\\s\\S]+/}},{pattern:/\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,alias:\"singleline\",inside:{interpolation:{pattern:/((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,lookbehind:!0,inside:e},string:/[\\s\\S]+/}}],char:{pattern:/'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,greedy:!0}}),delete n.languages.kotlin.string,n.languages.insertBefore(\"kotlin\",\"keyword\",{annotation:{pattern:/\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,alias:\"builtin\"}}),n.languages.insertBefore(\"kotlin\",\"function\",{label:{pattern:/\\b\\w+@|@\\w+\\b/,alias:\"symbol\"}}),n.languages.kt=n.languages.kotlin,n.languages.kts=n.languages.kotlin}(Prism);\nPrism.languages.kusto={comment:{pattern:/\\/\\/.*/,greedy:!0},string:{pattern:/```[\\s\\S]*?```|[hH]?(?:\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\.)*'|@(?:\"[^\\r\\n\"]*\"|'[^\\r\\n']*'))/,greedy:!0},verb:{pattern:/(\\|\\s*)[a-z][\\w-]*/i,lookbehind:!0,alias:\"keyword\"},command:{pattern:/\\.[a-z][a-z\\d-]*\\b/,alias:\"keyword\"},\"class-name\":/\\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\\b/,keyword:/\\b(?:access|alias|and|anti|as|asc|auto|between|by|(?:contains|(?:ends|starts)with|has(?:perfix|suffix)?)(?:_cs)?|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|matches\\s+regex|nulls\\s+(?:first|last))(?![\\w-])/,boolean:/\\b(?:false|null|true)\\b/,function:/\\b[a-z_]\\w*(?=\\s*\\()/,datetime:[{pattern:/\\b(?:(?:Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)\\s*,\\s*)?\\d{1,2}(?:\\s+|-)(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)(?:\\s+|-)\\d{2}\\s+\\d{2}:\\d{2}(?::\\d{2})?(?:\\s*(?:\\b(?:[A-Z]|(?:[ECMT][DS]|GM|U)T)|[+-]\\d{4}))?\\b/,alias:\"number\"},{pattern:/[+-]?\\b(?:\\d{4}-\\d{2}-\\d{2}(?:[ T]\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)?|\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)Z?/,alias:\"number\"}],number:/\\b(?:0x[0-9A-Fa-f]+|\\d+(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?)(?:(?:min|sec|[mnµ]s|[dhms]|microsecond|tick)\\b)?|[+-]?\\binf\\b/,operator:/=>|[!=]~|[!=<>]=?|[-+*/%|]|\\.\\./,punctuation:/[()\\[\\]{},;.:]/};\n!function(n){function e(n){return n=n.replace(/<inner>/g,(function(){return\"(?:\\\\\\\\.|[^\\\\\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))\"})),RegExp(\"((?:^|[^\\\\\\\\])(?:\\\\\\\\{2})*)(?:\"+n+\")\")}var t=\"(?:\\\\\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\\\\\|\\r\\n`])+\",a=\"\\\\|?__(?:\\\\|__)+\\\\|?(?:(?:\\n|\\r\\n?)|(?![^]))\".replace(/__/g,(function(){return t})),i=\"\\\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\\\|?(?:\\n|\\r\\n?)\";n.languages.markdown=n.languages.extend(\"markup\",{}),n.languages.insertBefore(\"markdown\",\"prolog\",{\"front-matter-block\":{pattern:/(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,lookbehind:!0,greedy:!0,inside:{punctuation:/^---|---$/,\"front-matter\":{pattern:/\\S+(?:\\s+\\S+)*/,alias:[\"yaml\",\"language-yaml\"],inside:n.languages.yaml}}},blockquote:{pattern:/^>(?:[\\t ]*>)*/m,alias:\"punctuation\"},table:{pattern:RegExp(\"^\"+a+i+\"(?:\"+a+\")*\",\"m\"),inside:{\"table-data-rows\":{pattern:RegExp(\"^(\"+a+i+\")(?:\"+a+\")*$\"),lookbehind:!0,inside:{\"table-data\":{pattern:RegExp(t),inside:n.languages.markdown},punctuation:/\\|/}},\"table-line\":{pattern:RegExp(\"^(\"+a+\")\"+i+\"$\"),lookbehind:!0,inside:{punctuation:/\\||:?-{3,}:?/}},\"table-header-row\":{pattern:RegExp(\"^\"+a+\"$\"),inside:{\"table-header\":{pattern:RegExp(t),alias:\"important\",inside:n.languages.markdown},punctuation:/\\|/}}}},code:[{pattern:/((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,lookbehind:!0,alias:\"keyword\"},{pattern:/^```[\\s\\S]*?^```$/m,greedy:!0,inside:{\"code-block\":{pattern:/^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,lookbehind:!0},\"code-language\":{pattern:/^(```).+/,lookbehind:!0},punctuation:/```/}}],title:[{pattern:/\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,alias:\"important\",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\\s*)#.+/m,lookbehind:!0,alias:\"important\",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,lookbehind:!0,alias:\"punctuation\"},list:{pattern:/(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,lookbehind:!0,alias:\"punctuation\"},\"url-reference\":{pattern:/!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,inside:{variable:{pattern:/^(!?\\[)[^\\]]+/,lookbehind:!0},string:/(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,punctuation:/^[\\[\\]!:]|[<>]/},alias:\"url\"},bold:{pattern:e(\"\\\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\\\b|\\\\*\\\\*(?:(?!\\\\*)<inner>|\\\\*(?:(?!\\\\*)<inner>)+\\\\*)+\\\\*\\\\*\"),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^..)[\\s\\S]+(?=..$)/,lookbehind:!0,inside:{}},punctuation:/\\*\\*|__/}},italic:{pattern:e(\"\\\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\\\b|\\\\*(?:(?!\\\\*)<inner>|\\\\*\\\\*(?:(?!\\\\*)<inner>)+\\\\*\\\\*)+\\\\*\"),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^.)[\\s\\S]+(?=.$)/,lookbehind:!0,inside:{}},punctuation:/[*_]/}},strike:{pattern:e(\"(~~?)(?:(?!~)<inner>)+\\\\2\"),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^~~?)[\\s\\S]+(?=\\1$)/,lookbehind:!0,inside:{}},punctuation:/~~?/}},\"code-snippet\":{pattern:/(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,lookbehind:!0,greedy:!0,alias:[\"code\",\"keyword\"]},url:{pattern:e('!?\\\\[(?:(?!\\\\])<inner>)+\\\\](?:\\\\([^\\\\s)]+(?:[\\t ]+\"(?:\\\\\\\\.|[^\"\\\\\\\\])*\")?\\\\)|[ \\t]?\\\\[(?:(?!\\\\])<inner>)+\\\\])'),lookbehind:!0,greedy:!0,inside:{operator:/^!/,content:{pattern:/(^\\[)[^\\]]+(?=\\])/,lookbehind:!0,inside:{}},variable:{pattern:/(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,lookbehind:!0},url:{pattern:/(^\\]\\()[^\\s)]+/,lookbehind:!0},string:{pattern:/(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,lookbehind:!0}}}}),[\"url\",\"bold\",\"italic\",\"strike\"].forEach((function(e){[\"url\",\"bold\",\"italic\",\"strike\",\"code-snippet\"].forEach((function(t){e!==t&&(n.languages.markdown[e].inside.content.inside[t]=n.languages.markdown[t])}))})),n.hooks.add(\"after-tokenize\",(function(n){\"markdown\"!==n.language&&\"md\"!==n.language||function n(e){if(e&&\"string\"!=typeof e)for(var t=0,a=e.length;t<a;t++){var i=e[t];if(\"code\"===i.type){var r=i.content[1],o=i.content[3];if(r&&o&&\"code-language\"===r.type&&\"code-block\"===o.type&&\"string\"==typeof r.content){var l=r.content.replace(/\\b#/g,\"sharp\").replace(/\\b\\+\\+/g,\"pp\"),s=\"language-\"+(l=(/[a-z][\\w-]*/i.exec(l)||[\"\"])[0].toLowerCase());o.alias?\"string\"==typeof o.alias?o.alias=[o.alias,s]:o.alias.push(s):o.alias=[s]}}else n(i.content)}}(n.tokens)})),n.hooks.add(\"wrap\",(function(e){if(\"code-block\"===e.type){for(var t=\"\",a=0,i=e.classes.length;a<i;a++){var s=e.classes[a],d=/language-(.+)/.exec(s);if(d){t=d[1];break}}var p=n.languages[t];if(p)e.content=n.highlight(e.content.replace(r,\"\").replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi,(function(n,e){var t;return\"#\"===(e=e.toLowerCase())[0]?(t=\"x\"===e[1]?parseInt(e.slice(2),16):Number(e.slice(1)),l(t)):o[e]||n})),p,t);else if(t&&\"none\"!==t&&n.plugins.autoloader){var u=\"md-\"+(new Date).valueOf()+\"-\"+Math.floor(1e16*Math.random());e.attributes.id=u,n.plugins.autoloader.loadLanguages(t,(function(){var e=document.getElementById(u);e&&(e.innerHTML=n.highlight(e.textContent,n.languages[t],t))}))}}}));var r=RegExp(n.languages.markup.tag.pattern.source,\"gi\"),o={amp:\"&\",lt:\"<\",gt:\">\",quot:'\"'},l=String.fromCodePoint||String.fromCharCode;n.languages.md=n.languages.markdown}(Prism);\nPrism.languages.objectivec=Prism.languages.extend(\"c\",{string:{pattern:/@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,greedy:!0},keyword:/\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,operator:/-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/}),delete Prism.languages.objectivec[\"class-name\"],Prism.languages.objc=Prism.languages.objectivec;\n!function(e){var a=/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/,t=[{pattern:/\\b(?:false|true)\\b/i,alias:\"boolean\"},{pattern:/(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,greedy:!0,lookbehind:!0},{pattern:/(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,greedy:!0,lookbehind:!0},/\\b(?:null)\\b/i,/\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/],i=/\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,n=/<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/,s=/[{}\\[\\](),:;]/;e.languages.php={delimiter:{pattern:/\\?>$|^<\\?(?:php(?=\\s)|=)?/i,alias:\"important\"},comment:a,variable:/\\$+(?:\\w+\\b|(?=\\{))/,package:{pattern:/(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,lookbehind:!0,inside:{punctuation:/\\\\/}},\"class-name-definition\":{pattern:/(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,lookbehind:!0,alias:\"class-name\"},\"function-definition\":{pattern:/(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,lookbehind:!0,alias:\"function\"},keyword:[{pattern:/(\\(\\s*)\\b(?:array|bool|boolean|float|int|integer|object|string)\\b(?=\\s*\\))/i,alias:\"type-casting\",greedy:!0,lookbehind:!0},{pattern:/([(,?]\\s*)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string)\\b(?=\\s*\\$)/i,alias:\"type-hint\",greedy:!0,lookbehind:!0},{pattern:/(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|never|object|self|static|string|void)\\b/i,alias:\"return-type\",greedy:!0,lookbehind:!0},{pattern:/\\b(?:array(?!\\s*\\()|bool|float|int|iterable|mixed|object|string|void)\\b/i,alias:\"type-declaration\",greedy:!0},{pattern:/(\\|\\s*)(?:false|null)\\b|\\b(?:false|null)(?=\\s*\\|)/i,alias:\"type-declaration\",greedy:!0,lookbehind:!0},{pattern:/\\b(?:parent|self|static)(?=\\s*::)/i,alias:\"static-context\",greedy:!0},{pattern:/(\\byield\\s+)from\\b/i,lookbehind:!0},/\\bclass\\b/i,{pattern:/((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|never|new|or|parent|print|private|protected|public|readonly|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\\b/i,lookbehind:!0}],\"argument-name\":{pattern:/([(,]\\s*)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,lookbehind:!0},\"class-name\":[{pattern:/(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,greedy:!0,lookbehind:!0},{pattern:/(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,greedy:!0,lookbehind:!0},{pattern:/\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,greedy:!0},{pattern:/(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,alias:\"class-name-fully-qualified\",greedy:!0,lookbehind:!0,inside:{punctuation:/\\\\/}},{pattern:/(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,alias:\"class-name-fully-qualified\",greedy:!0,inside:{punctuation:/\\\\/}},{pattern:/(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,alias:\"class-name-fully-qualified\",greedy:!0,lookbehind:!0,inside:{punctuation:/\\\\/}},{pattern:/\\b[a-z_]\\w*(?=\\s*\\$)/i,alias:\"type-declaration\",greedy:!0},{pattern:/(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,alias:[\"class-name-fully-qualified\",\"type-declaration\"],greedy:!0,inside:{punctuation:/\\\\/}},{pattern:/\\b[a-z_]\\w*(?=\\s*::)/i,alias:\"static-context\",greedy:!0},{pattern:/(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,alias:[\"class-name-fully-qualified\",\"static-context\"],greedy:!0,inside:{punctuation:/\\\\/}},{pattern:/([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,alias:\"type-hint\",greedy:!0,lookbehind:!0},{pattern:/([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,alias:[\"class-name-fully-qualified\",\"type-hint\"],greedy:!0,lookbehind:!0,inside:{punctuation:/\\\\/}},{pattern:/(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,alias:\"return-type\",greedy:!0,lookbehind:!0},{pattern:/(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,alias:[\"class-name-fully-qualified\",\"return-type\"],greedy:!0,lookbehind:!0,inside:{punctuation:/\\\\/}}],constant:t,function:{pattern:/(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,lookbehind:!0,inside:{punctuation:/\\\\/}},property:{pattern:/(->\\s*)\\w+/,lookbehind:!0},number:i,operator:n,punctuation:s};var l={pattern:/\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,lookbehind:!0,inside:e.languages.php},r=[{pattern:/<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,alias:\"nowdoc-string\",greedy:!0,inside:{delimiter:{pattern:/^<<<'[^']+'|[a-z_]\\w*;$/i,alias:\"symbol\",inside:{punctuation:/^<<<'?|[';]$/}}}},{pattern:/<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,alias:\"heredoc-string\",greedy:!0,inside:{delimiter:{pattern:/^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,alias:\"symbol\",inside:{punctuation:/^<<<\"?|[\";]$/}},interpolation:l}},{pattern:/`(?:\\\\[\\s\\S]|[^\\\\`])*`/,alias:\"backtick-quoted-string\",greedy:!0},{pattern:/'(?:\\\\[\\s\\S]|[^\\\\'])*'/,alias:\"single-quoted-string\",greedy:!0},{pattern:/\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,alias:\"double-quoted-string\",greedy:!0,inside:{interpolation:l}}];e.languages.insertBefore(\"php\",\"variable\",{string:r,attribute:{pattern:/#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,greedy:!0,inside:{\"attribute-content\":{pattern:/^(#\\[)[\\s\\S]+(?=\\]$)/,lookbehind:!0,inside:{comment:a,string:r,\"attribute-class-name\":[{pattern:/([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,alias:\"class-name\",greedy:!0,lookbehind:!0},{pattern:/([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,alias:[\"class-name\",\"class-name-fully-qualified\"],greedy:!0,lookbehind:!0,inside:{punctuation:/\\\\/}}],constant:t,number:i,operator:n,punctuation:s}},delimiter:{pattern:/^#\\[|\\]$/,alias:\"punctuation\"}}}}),e.hooks.add(\"before-tokenize\",(function(a){/<\\?/.test(a.code)&&e.languages[\"markup-templating\"].buildPlaceholders(a,\"php\",/<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/g)})),e.hooks.add(\"after-tokenize\",(function(a){e.languages[\"markup-templating\"].tokenizePlaceholders(a,\"php\")}))}(Prism);\n!function(e){var i=e.languages.powershell={comment:[{pattern:/(^|[^`])<#[\\s\\S]*?#>/,lookbehind:!0},{pattern:/(^|[^`])#.*/,lookbehind:!0}],string:[{pattern:/\"(?:`[\\s\\S]|[^`\"])*\"/,greedy:!0,inside:null},{pattern:/'(?:[^']|'')*'/,greedy:!0}],namespace:/\\[[a-z](?:\\[(?:\\[[^\\]]*\\]|[^\\[\\]])*\\]|[^\\[\\]])*\\]/i,boolean:/\\$(?:false|true)\\b/i,variable:/\\$\\w+\\b/,function:[/\\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\\b/i,/\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i],keyword:/\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,operator:{pattern:/(^|\\W)(?:!|-(?:b?(?:and|x?or)|as|(?:Not)?(?:Contains|In|Like|Match)|eq|ge|gt|is(?:Not)?|Join|le|lt|ne|not|Replace|sh[lr])\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,lookbehind:!0},punctuation:/[|{}[\\];(),.]/};i.string[0].inside={function:{pattern:/(^|[^`])\\$\\((?:\\$\\([^\\r\\n()]*\\)|(?!\\$\\()[^\\r\\n)])*\\)/,lookbehind:!0,inside:i},boolean:i.boolean,variable:i.variable}}(Prism);\nPrism.languages.python={comment:{pattern:/(^|[^\\\\])#.*/,lookbehind:!0,greedy:!0},\"string-interpolation\":{pattern:/(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,lookbehind:!0,inside:{\"format-spec\":{pattern:/(:)[^:(){}]+(?=\\}$)/,lookbehind:!0},\"conversion-option\":{pattern:/![sra](?=[:}]$)/,alias:\"punctuation\"},rest:null}},string:/[\\s\\S]+/}},\"triple-quoted-string\":{pattern:/(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,greedy:!0,alias:\"string\"},string:{pattern:/(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,greedy:!0},function:{pattern:/((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,lookbehind:!0},\"class-name\":{pattern:/(\\bclass\\s+)\\w+/i,lookbehind:!0},decorator:{pattern:/(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,lookbehind:!0,alias:[\"annotation\",\"punctuation\"],inside:{punctuation:/\\./}},keyword:/\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,builtin:/\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,boolean:/\\b(?:False|None|True)\\b/,number:/\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,operator:/[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\\];(),.:]/},Prism.languages.python[\"string-interpolation\"].inside.interpolation.inside.rest=Prism.languages.python,Prism.languages.py=Prism.languages.python;\n!function(e){function s(e,s){for(var a=0;a<s;a++)e=e.replace(/<self>/g,(function(){return\"(?:\"+e+\")\"}));return e.replace(/<self>/g,\"[^\\\\s\\\\S]\").replace(/<str>/g,'(?:@(?!\")|\"(?:[^\\r\\n\\\\\\\\\"]|\\\\\\\\.)*\"|@\"(?:[^\\\\\\\\\"]|\"\"|\\\\\\\\[^])*\"(?!\")|\\'(?:(?:[^\\r\\n\\'\\\\\\\\]|\\\\\\\\.|\\\\\\\\[Uux][\\\\da-fA-F]{1,8})\\'|(?=[^\\\\\\\\](?!\\'))))').replace(/<comment>/g,\"(?:/(?![/*])|//.*[\\r\\n]|/\\\\*[^*]*(?:\\\\*(?!/)[^*]*)*\\\\*/)\")}var a=s(\"\\\\((?:[^()'\\\"@/]|<str>|<comment>|<self>)*\\\\)\",2),t=s(\"\\\\[(?:[^\\\\[\\\\]'\\\"@/]|<str>|<comment>|<self>)*\\\\]\",1),r=s(\"\\\\{(?:[^{}'\\\"@/]|<str>|<comment>|<self>)*\\\\}\",2),n=\"@(?:await\\\\b\\\\s*)?(?:(?!await\\\\b)\\\\w+\\\\b|\"+a+\")(?:[?!]?\\\\.\\\\w+\\\\b|(?:\"+s(\"<(?:[^<>'\\\"@/]|<comment>|<self>)*>\",1)+\")?\"+a+\"|\"+t+\")*(?![?!\\\\.(\\\\[]|<(?!/))\",l=\"(?:\\\"[^\\\"@]*\\\"|'[^'@]*'|[^\\\\s'\\\"@>=]+(?=[\\\\s>])|[\\\"'][^\\\"'@]*(?:(?:@(?![\\\\w()])|\"+n+\")[^\\\"'@]*)+[\\\"'])\",i=\"(?:\\\\s(?:\\\\s*[^\\\\s>/=]+(?:\\\\s*=\\\\s*<tagAttrValue>|(?=[\\\\s/>])))+)?\".replace(/<tagAttrValue>/,l),g=\"(?!\\\\d)[^\\\\s>/=$<%]+\"+i+\"\\\\s*/?>\",o=\"\\\\B@?(?:<([a-zA-Z][\\\\w:]*)\"+i+\"\\\\s*>(?:[^<]|</?(?!\\\\1\\\\b)\"+g+\"|\"+s(\"<\\\\1\"+i+\"\\\\s*>(?:[^<]|</?(?!\\\\1\\\\b)\"+g+\"|<self>)*</\\\\1\\\\s*>\",2)+\")*</\\\\1\\\\s*>|<\"+g+\")\";e.languages.cshtml=e.languages.extend(\"markup\",{});var c={pattern:/\\S[\\s\\S]*/,alias:\"language-csharp\",inside:e.languages.insertBefore(\"csharp\",\"string\",{html:{pattern:RegExp(o),greedy:!0,inside:e.languages.cshtml}},{csharp:e.languages.extend(\"csharp\",{})})},p={pattern:RegExp(\"(^|[^@])\"+n),lookbehind:!0,greedy:!0,alias:\"variable\",inside:{keyword:/^@/,csharp:c}};e.languages.cshtml.tag.pattern=RegExp(\"</?\"+g),e.languages.cshtml.tag.inside[\"attr-value\"].pattern=RegExp(\"=\\\\s*\"+l),e.languages.insertBefore(\"inside\",\"punctuation\",{value:p},e.languages.cshtml.tag.inside[\"attr-value\"]),e.languages.insertBefore(\"cshtml\",\"prolog\",{\"razor-comment\":{pattern:/@\\*[\\s\\S]*?\\*@/,greedy:!0,alias:\"comment\"},block:{pattern:RegExp(\"(^|[^@])@(?:\"+[r,\"(?:code|functions)\\\\s*\"+r,\"(?:for|foreach|lock|switch|using|while)\\\\s*\"+a+\"\\\\s*\"+r,\"do\\\\s*\"+r+\"\\\\s*while\\\\s*\"+a+\"(?:\\\\s*;)?\",\"try\\\\s*\"+r+\"\\\\s*catch\\\\s*\"+a+\"\\\\s*\"+r+\"\\\\s*finally\\\\s*\"+r,\"if\\\\s*\"+a+\"\\\\s*\"+r+\"(?:\\\\s*else(?:\\\\s+if\\\\s*\"+a+\")?\\\\s*\"+r+\")*\",\"helper\\\\s+\\\\w+\\\\s*\"+a+\"\\\\s*\"+r].join(\"|\")+\")\"),lookbehind:!0,greedy:!0,inside:{keyword:/^@\\w*/,csharp:c}},directive:{pattern:/^([ \\t]*)@(?:addTagHelper|attribute|implements|inherits|inject|layout|model|namespace|page|preservewhitespace|removeTagHelper|section|tagHelperPrefix|using)(?=\\s).*/m,lookbehind:!0,greedy:!0,inside:{keyword:/^@\\w+/,csharp:c}},value:p,\"delegate-operator\":{pattern:/(^|[^@])@(?=<)/,lookbehind:!0,alias:\"operator\"}}),e.languages.razor=e.languages.cshtml}(Prism);\n!function(t){var n=t.util.clone(t.languages.javascript),e=\"(?:\\\\{<S>*\\\\.{3}(?:[^{}]|<BRACES>)*\\\\})\";function a(t,n){return t=t.replace(/<S>/g,(function(){return\"(?:\\\\s|//.*(?!.)|/\\\\*(?:[^*]|\\\\*(?!/))\\\\*/)\"})).replace(/<BRACES>/g,(function(){return\"(?:\\\\{(?:\\\\{(?:\\\\{[^{}]*\\\\}|[^{}])*\\\\}|[^{}])*\\\\})\"})).replace(/<SPREAD>/g,(function(){return e})),RegExp(t,n)}e=a(e).source,t.languages.jsx=t.languages.extend(\"markup\",n),t.languages.jsx.tag.pattern=a(\"</?(?:[\\\\w.:-]+(?:<S>+(?:[\\\\w.:$-]+(?:=(?:\\\"(?:\\\\\\\\[^]|[^\\\\\\\\\\\"])*\\\"|'(?:\\\\\\\\[^]|[^\\\\\\\\'])*'|[^\\\\s{'\\\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*/?)?>\"),t.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/,t.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/,t.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,t.languages.jsx.tag.inside.comment=n.comment,t.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:a(\"<SPREAD>\"),inside:t.languages.jsx}},t.languages.jsx.tag),t.languages.insertBefore(\"inside\",\"special-attr\",{script:{pattern:a(\"=<BRACES>\"),alias:\"language-javascript\",inside:{\"script-punctuation\":{pattern:/^=(?=\\{)/,alias:\"punctuation\"},rest:t.languages.jsx}}},t.languages.jsx.tag);var s=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(s).join(\"\"):\"\"},g=function(n){for(var e=[],a=0;a<n.length;a++){var o=n[a],i=!1;if(\"string\"!=typeof o&&(\"tag\"===o.type&&o.content[0]&&\"tag\"===o.content[0].type?\"</\"===o.content[0].content[0].content?e.length>0&&e[e.length-1].tagName===s(o.content[0].content[1])&&e.pop():\"/>\"===o.content[o.content.length-1].content||e.push({tagName:s(o.content[0].content[1]),openedBraces:0}):e.length>0&&\"punctuation\"===o.type&&\"{\"===o.content?e[e.length-1].openedBraces++:e.length>0&&e[e.length-1].openedBraces>0&&\"punctuation\"===o.type&&\"}\"===o.content?e[e.length-1].openedBraces--:i=!0),(i||\"string\"==typeof o)&&e.length>0&&0===e[e.length-1].openedBraces){var r=s(o);a<n.length-1&&(\"string\"==typeof n[a+1]||\"plain-text\"===n[a+1].type)&&(r+=s(n[a+1]),n.splice(a+1,1)),a>0&&(\"string\"==typeof n[a-1]||\"plain-text\"===n[a-1].type)&&(r=s(n[a-1])+r,n.splice(a-1,1),a--),n[a]=new t.Token(\"plain-text\",r,null,r)}o.content&&\"string\"!=typeof o.content&&g(o.content)}};t.hooks.add(\"after-tokenize\",(function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||g(t.tokens)}))}(Prism);\n!function(e){e.languages.typescript=e.languages.extend(\"javascript\",{\"class-name\":{pattern:/(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,lookbehind:!0,greedy:!0,inside:null},builtin:/\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/}),e.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/,/\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/,/\\btype\\b(?=\\s*(?:[\\{*]|$))/),delete e.languages.typescript.parameter,delete e.languages.typescript[\"literal-property\"];var s=e.languages.extend(\"typescript\",{});delete s[\"class-name\"],e.languages.typescript[\"class-name\"].inside=s,e.languages.insertBefore(\"typescript\",\"function\",{decorator:{pattern:/@[$\\w\\xA0-\\uFFFF]+/,inside:{at:{pattern:/^@/,alias:\"operator\"},function:/^[\\s\\S]+/}},\"generic-function\":{pattern:/#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,greedy:!0,inside:{function:/^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,generic:{pattern:/<[\\s\\S]+/,alias:\"class-name\",inside:s}}}}),e.languages.ts=e.languages.typescript}(Prism);\n!function(e){var a=e.util.clone(e.languages.typescript);e.languages.tsx=e.languages.extend(\"jsx\",a),delete e.languages.tsx.parameter,delete e.languages.tsx[\"literal-property\"];var t=e.languages.tsx.tag;t.pattern=RegExp(\"(^|[^\\\\w$]|(?=</))(?:\"+t.pattern.source+\")\",t.pattern.flags),t.lookbehind=!0}(Prism);\n!function(a){var e={pattern:/\\\\[\\\\(){}[\\]^$+*?|.]/,alias:\"escape\"},n=/\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/,t=\"(?:[^\\\\\\\\-]|\"+n.source+\")\",s=RegExp(t+\"-\"+t),i={pattern:/(<|')[^<>']+(?=[>']$)/,lookbehind:!0,alias:\"variable\"};a.languages.regex={\"char-class\":{pattern:/((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,lookbehind:!0,inside:{\"char-class-negation\":{pattern:/(^\\[)\\^/,lookbehind:!0,alias:\"operator\"},\"char-class-punctuation\":{pattern:/^\\[|\\]$/,alias:\"punctuation\"},range:{pattern:s,inside:{escape:n,\"range-punctuation\":{pattern:/-/,alias:\"operator\"}}},\"special-escape\":e,\"char-set\":{pattern:/\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,alias:\"class-name\"},escape:n}},\"special-escape\":e,\"char-set\":{pattern:/\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,alias:\"class-name\"},backreference:[{pattern:/\\\\(?![123][0-7]{2})[1-9]/,alias:\"keyword\"},{pattern:/\\\\k<[^<>']+>/,alias:\"keyword\",inside:{\"group-name\":i}}],anchor:{pattern:/[$^]|\\\\[ABbGZz]/,alias:\"function\"},escape:n,group:[{pattern:/\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,alias:\"punctuation\",inside:{\"group-name\":i}},{pattern:/\\)/,alias:\"punctuation\"}],quantifier:{pattern:/(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,alias:\"number\"},alternation:{pattern:/\\|/,alias:\"keyword\"}}}(Prism);\n!function(e){e.languages.ruby=e.languages.extend(\"clike\",{comment:{pattern:/#.*|^=begin\\s[\\s\\S]*?^=end/m,greedy:!0},\"class-name\":{pattern:/(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,lookbehind:!0,inside:{punctuation:/[.\\\\]/}},keyword:/\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,operator:/\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,punctuation:/[(){}[\\].,;]/}),e.languages.insertBefore(\"ruby\",\"operator\",{\"double-colon\":{pattern:/::/,alias:\"punctuation\"}});var n={pattern:/((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,lookbehind:!0,inside:{content:{pattern:/^(#\\{)[\\s\\S]+(?=\\}$)/,lookbehind:!0,inside:e.languages.ruby},delimiter:{pattern:/^#\\{|\\}$/,alias:\"punctuation\"}}};delete e.languages.ruby.function;var t=\"(?:\"+[\"([^a-zA-Z0-9\\\\s{(\\\\[<=])(?:(?!\\\\1)[^\\\\\\\\]|\\\\\\\\[^])*\\\\1\",\"\\\\((?:[^()\\\\\\\\]|\\\\\\\\[^]|\\\\((?:[^()\\\\\\\\]|\\\\\\\\[^])*\\\\))*\\\\)\",\"\\\\{(?:[^{}\\\\\\\\]|\\\\\\\\[^]|\\\\{(?:[^{}\\\\\\\\]|\\\\\\\\[^])*\\\\})*\\\\}\",\"\\\\[(?:[^\\\\[\\\\]\\\\\\\\]|\\\\\\\\[^]|\\\\[(?:[^\\\\[\\\\]\\\\\\\\]|\\\\\\\\[^])*\\\\])*\\\\]\",\"<(?:[^<>\\\\\\\\]|\\\\\\\\[^]|<(?:[^<>\\\\\\\\]|\\\\\\\\[^])*>)*>\"].join(\"|\")+\")\",i='(?:\"(?:\\\\\\\\.|[^\"\\\\\\\\\\r\\n])*\"|(?:\\\\b[a-zA-Z_]\\\\w*|[^\\\\s\\0-\\\\x7F]+)[?!]?|\\\\$.)';e.languages.insertBefore(\"ruby\",\"keyword\",{\"regex-literal\":[{pattern:RegExp(\"%r\"+t+\"[egimnosux]{0,6}\"),greedy:!0,inside:{interpolation:n,regex:/[\\s\\S]+/}},{pattern:/(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,lookbehind:!0,greedy:!0,inside:{interpolation:n,regex:/[\\s\\S]+/}}],variable:/[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,symbol:[{pattern:RegExp(\"(^|[^:]):\"+i),lookbehind:!0,greedy:!0},{pattern:RegExp(\"([\\r\\n{(,][ \\t]*)\"+i+\"(?=:(?!:))\"),lookbehind:!0,greedy:!0}],\"method-definition\":{pattern:/(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,lookbehind:!0,inside:{function:/\\b\\w+$/,keyword:/^self\\b/,\"class-name\":/^\\w+/,punctuation:/\\./}}}),e.languages.insertBefore(\"ruby\",\"string\",{\"string-literal\":[{pattern:RegExp(\"%[qQiIwWs]?\"+t),greedy:!0,inside:{interpolation:n,string:/[\\s\\S]+/}},{pattern:/(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,greedy:!0,inside:{interpolation:n,string:/[\\s\\S]+/}},{pattern:/<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,alias:\"heredoc-string\",greedy:!0,inside:{delimiter:{pattern:/^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,inside:{symbol:/\\b\\w+/,punctuation:/^<<[-~]?/}},interpolation:n,string:/[\\s\\S]+/}},{pattern:/<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,alias:\"heredoc-string\",greedy:!0,inside:{delimiter:{pattern:/^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,inside:{symbol:/\\b\\w+/,punctuation:/^<<[-~]?'|'$/}},string:/[\\s\\S]+/}}],\"command-literal\":[{pattern:RegExp(\"%x\"+t),greedy:!0,inside:{interpolation:n,command:{pattern:/[\\s\\S]+/,alias:\"string\"}}},{pattern:/`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,greedy:!0,inside:{interpolation:n,command:{pattern:/[\\s\\S]+/,alias:\"string\"}}}]}),delete e.languages.ruby.string,e.languages.insertBefore(\"ruby\",\"number\",{builtin:/\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,constant:/\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/}),e.languages.rb=e.languages.ruby}(Prism);\n!function(e){for(var a=\"/\\\\*(?:[^*/]|\\\\*(?!/)|/(?!\\\\*)|<self>)*\\\\*/\",t=0;t<2;t++)a=a.replace(/<self>/g,(function(){return a}));a=a.replace(/<self>/g,(function(){return\"[^\\\\s\\\\S]\"})),e.languages.rust={comment:[{pattern:RegExp(\"(^|[^\\\\\\\\])\"+a),lookbehind:!0,greedy:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,greedy:!0},char:{pattern:/b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,greedy:!0},attribute:{pattern:/#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,greedy:!0,alias:\"attr-name\",inside:{string:null}},\"closure-params\":{pattern:/([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,lookbehind:!0,greedy:!0,inside:{\"closure-punctuation\":{pattern:/^\\||\\|$/,alias:\"punctuation\"},rest:null}},\"lifetime-annotation\":{pattern:/'\\w+/,alias:\"symbol\"},\"fragment-specifier\":{pattern:/(\\$\\w+:)[a-z]+/,lookbehind:!0,alias:\"punctuation\"},variable:/\\$\\w+/,\"function-definition\":{pattern:/(\\bfn\\s+)\\w+/,lookbehind:!0,alias:\"function\"},\"type-definition\":{pattern:/(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/,lookbehind:!0,alias:\"class-name\"},\"module-declaration\":[{pattern:/(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,lookbehind:!0,alias:\"namespace\"},{pattern:/(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,lookbehind:!0,alias:\"namespace\",inside:{punctuation:/::/}}],keyword:[/\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/,/\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/],function:/\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,macro:{pattern:/\\b\\w+!/,alias:\"property\"},constant:/\\b[A-Z_][A-Z_\\d]+\\b/,\"class-name\":/\\b[A-Z]\\w*\\b/,namespace:{pattern:/(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,inside:{punctuation:/::/}},number:/\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/,boolean:/\\b(?:false|true)\\b/,punctuation:/->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,operator:/[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/},e.languages.rust[\"closure-params\"].inside.rest=e.languages.rust,e.languages.rust.attribute.inside.string=e.languages.rust.string}(Prism);\n!function(e){e.languages.sass=e.languages.extend(\"css\",{comment:{pattern:/^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,lookbehind:!0,greedy:!0}}),e.languages.insertBefore(\"sass\",\"atrule\",{\"atrule-line\":{pattern:/^(?:[ \\t]*)[@+=].+/m,greedy:!0,inside:{atrule:/(?:@[\\w-]+|[+=])/}}}),delete e.languages.sass.atrule;var r=/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/,t=[/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/,{pattern:/(\\s)-(?=\\s)/,lookbehind:!0}];e.languages.insertBefore(\"sass\",\"property\",{\"variable-line\":{pattern:/^[ \\t]*\\$.+/m,greedy:!0,inside:{punctuation:/:/,variable:r,operator:t}},\"property-line\":{pattern:/^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,greedy:!0,inside:{property:[/[^:\\s]+(?=\\s*:)/,{pattern:/(:)[^:\\s]+/,lookbehind:!0}],punctuation:/:/,variable:r,operator:t,important:e.languages.sass.important}}}),delete e.languages.sass.property,delete e.languages.sass.important,e.languages.insertBefore(\"sass\",\"punctuation\",{selector:{pattern:/^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,lookbehind:!0,greedy:!0}})}(Prism);\nPrism.languages.scss=Prism.languages.extend(\"css\",{comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0},atrule:{pattern:/@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,inside:{rule:/@[\\w-]+/}},url:/(?:[-a-z]+-)?url(?=\\()/i,selector:{pattern:/(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,inside:{parent:{pattern:/&/,alias:\"important\"},placeholder:/%[-\\w]+/,variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}},property:{pattern:/(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,inside:{variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}}}),Prism.languages.insertBefore(\"scss\",\"atrule\",{keyword:[/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i,{pattern:/( )(?:from|through)(?= )/,lookbehind:!0}]}),Prism.languages.insertBefore(\"scss\",\"important\",{variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}),Prism.languages.insertBefore(\"scss\",\"function\",{\"module-modifier\":{pattern:/\\b(?:as|hide|show|with)\\b/i,alias:\"keyword\"},placeholder:{pattern:/%[-\\w]+/,alias:\"selector\"},statement:{pattern:/\\B!(?:default|optional)\\b/i,alias:\"keyword\"},boolean:/\\b(?:false|true)\\b/,null:{pattern:/\\bnull\\b/,alias:\"keyword\"},operator:{pattern:/(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,lookbehind:!0}}),Prism.languages.scss.atrule.inside.rest=Prism.languages.scss;\n!function(n){var t={pattern:/\\{[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}\\}/i,alias:\"constant\",inside:{punctuation:/[{}]/}};n.languages[\"solution-file\"]={comment:{pattern:/#.*/,greedy:!0},string:{pattern:/\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,greedy:!0,inside:{guid:t}},object:{pattern:/^([ \\t]*)(?:([A-Z]\\w*)\\b(?=.*(?:\\r\\n?|\\n)(?:\\1[ \\t].*(?:\\r\\n?|\\n))*\\1End\\2(?=[ \\t]*$))|End[A-Z]\\w*(?=[ \\t]*$))/m,lookbehind:!0,greedy:!0,alias:\"keyword\"},property:{pattern:/^([ \\t]*)(?!\\s)[^\\r\\n\"#=()]*[^\\s\"#=()](?=\\s*=)/m,lookbehind:!0,inside:{guid:t}},guid:t,number:/\\b\\d+(?:\\.\\d+)*\\b/,boolean:/\\b(?:FALSE|TRUE)\\b/,operator:/=/,punctuation:/[(),]/},n.languages.sln=n.languages[\"solution-file\"]}(Prism);\nPrism.languages.sql={comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,lookbehind:!0},variable:[{pattern:/@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,greedy:!0},/@[\\w.$]+/],string:{pattern:/(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,greedy:!0,lookbehind:!0},identifier:{pattern:/(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,greedy:!0,lookbehind:!0,inside:{punctuation:/^`|`$/}},function:/\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,keyword:/\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,boolean:/\\b(?:FALSE|NULL|TRUE)\\b/i,number:/\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,operator:/[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,punctuation:/[;[\\]()`,.]/};\nPrism.languages.swift={comment:{pattern:/(^|[^\\\\:])(?:\\/\\/.*|\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\/)/,lookbehind:!0,greedy:!0},\"string-literal\":[{pattern:RegExp('(^|[^\"#])(?:\"(?:\\\\\\\\(?:\\\\((?:[^()]|\\\\([^()]*\\\\))*\\\\)|\\r\\n|[^(])|[^\\\\\\\\\\r\\n\"])*\"|\"\"\"(?:\\\\\\\\(?:\\\\((?:[^()]|\\\\([^()]*\\\\))*\\\\)|[^(])|[^\\\\\\\\\"]|\"(?!\"\"))*\"\"\")(?![\"#])'),lookbehind:!0,greedy:!0,inside:{interpolation:{pattern:/(\\\\\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,lookbehind:!0,inside:null},\"interpolation-punctuation\":{pattern:/^\\)|\\\\\\($/,alias:\"punctuation\"},punctuation:/\\\\(?=[\\r\\n])/,string:/[\\s\\S]+/}},{pattern:RegExp('(^|[^\"#])(#+)(?:\"(?:\\\\\\\\(?:#+\\\\((?:[^()]|\\\\([^()]*\\\\))*\\\\)|\\r\\n|[^#])|[^\\\\\\\\\\r\\n])*?\"|\"\"\"(?:\\\\\\\\(?:#+\\\\((?:[^()]|\\\\([^()]*\\\\))*\\\\)|[^#])|[^\\\\\\\\])*?\"\"\")\\\\2'),lookbehind:!0,greedy:!0,inside:{interpolation:{pattern:/(\\\\#+\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,lookbehind:!0,inside:null},\"interpolation-punctuation\":{pattern:/^\\)|\\\\#+\\($/,alias:\"punctuation\"},string:/[\\s\\S]+/}}],directive:{pattern:RegExp(\"#(?:(?:elseif|if)\\\\b(?:[ \\t]*(?:![ \\t]*)?(?:\\\\b\\\\w+\\\\b(?:[ \\t]*\\\\((?:[^()]|\\\\([^()]*\\\\))*\\\\))?|\\\\((?:[^()]|\\\\([^()]*\\\\))*\\\\))(?:[ \\t]*(?:&&|\\\\|\\\\|))?)+|(?:else|endif)\\\\b)\"),alias:\"property\",inside:{\"directive-name\":/^#\\w+/,boolean:/\\b(?:false|true)\\b/,number:/\\b\\d+(?:\\.\\d+)*\\b/,operator:/!|&&|\\|\\||[<>]=?/,punctuation:/[(),]/}},literal:{pattern:/#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\\b/,alias:\"constant\"},\"other-directive\":{pattern:/#\\w+\\b/,alias:\"property\"},attribute:{pattern:/@\\w+/,alias:\"atrule\"},\"function-definition\":{pattern:/(\\bfunc\\s+)\\w+/,lookbehind:!0,alias:\"function\"},label:{pattern:/\\b(break|continue)\\s+\\w+|\\b[a-zA-Z_]\\w*(?=\\s*:\\s*(?:for|repeat|while)\\b)/,lookbehind:!0,alias:\"important\"},keyword:/\\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\\b/,boolean:/\\b(?:false|true)\\b/,nil:{pattern:/\\bnil\\b/,alias:\"constant\"},\"short-argument\":/\\$\\d+\\b/,omit:{pattern:/\\b_\\b/,alias:\"keyword\"},number:/\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\"class-name\":/\\b[A-Z](?:[A-Z_\\d]*[a-z]\\w*)?\\b/,function:/\\b[a-z_]\\w*(?=\\s*\\()/i,constant:/\\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,operator:/[-+*/%=!<>&|^~?]+|\\.[.\\-+*/%=!<>&|^~?]+/,punctuation:/[{}[\\]();,.:\\\\]/},Prism.languages.swift[\"string-literal\"].forEach((function(e){e.inside.interpolation.inside=Prism.languages.swift}));\nPrism.languages.wasm={comment:[/\\(;[\\s\\S]*?;\\)/,{pattern:/;;.*/,greedy:!0}],string:{pattern:/\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,greedy:!0},keyword:[{pattern:/\\b(?:align|offset)=/,inside:{operator:/=/}},{pattern:/\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,inside:{punctuation:/\\./}},/\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],variable:/\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,number:/[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,punctuation:/[()]/};\n!function(a){function e(e,n){a.languages[e]&&a.languages.insertBefore(e,\"comment\",{\"doc-comment\":n})}var n=a.languages.markup.tag,t={pattern:/\\/\\/\\/.*/,greedy:!0,alias:\"comment\",inside:{tag:n}},g={pattern:/'''.*/,greedy:!0,alias:\"comment\",inside:{tag:n}};e(\"csharp\",t),e(\"fsharp\",t),e(\"vbnet\",g)}(Prism);\n!function(e){var n=/[*&][^\\s[\\]{},]+/,r=/!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/,t=\"(?:\"+r.source+\"(?:[ \\t]+\"+n.source+\")?|\"+n.source+\"(?:[ \\t]+\"+r.source+\")?)\",a=\"(?:[^\\\\s\\\\x00-\\\\x08\\\\x0e-\\\\x1f!\\\"#%&'*,\\\\-:>?@[\\\\]`{|}\\\\x7f-\\\\x84\\\\x86-\\\\x9f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*\".replace(/<PLAIN>/g,(function(){return\"[^\\\\s\\\\x00-\\\\x08\\\\x0e-\\\\x1f,[\\\\]{}\\\\x7f-\\\\x84\\\\x86-\\\\x9f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff]\"})),d=\"\\\"(?:[^\\\"\\\\\\\\\\r\\n]|\\\\\\\\.)*\\\"|'(?:[^'\\\\\\\\\\r\\n]|\\\\\\\\.)*'\";function o(e,n){n=(n||\"\").replace(/m/g,\"\")+\"m\";var r=\"([:\\\\-,[{]\\\\s*(?:\\\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\\\]|\\\\}|(?:[\\r\\n]\\\\s*)?#))\".replace(/<<prop>>/g,(function(){return t})).replace(/<<value>>/g,(function(){return e}));return RegExp(r,n)}e.languages.yaml={scalar:{pattern:RegExp(\"([\\\\-:]\\\\s*(?:\\\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\\\S[^\\r\\n]*(?:\\\\2[^\\r\\n]+)*)\".replace(/<<prop>>/g,(function(){return t}))),lookbehind:!0,alias:\"string\"},comment:/#.*/,key:{pattern:RegExp(\"((?:^|[:\\\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\\\s*:\\\\s)\".replace(/<<prop>>/g,(function(){return t})).replace(/<<key>>/g,(function(){return\"(?:\"+a+\"|\"+d+\")\"}))),lookbehind:!0,greedy:!0,alias:\"atrule\"},directive:{pattern:/(^[ \\t]*)%.+/m,lookbehind:!0,alias:\"important\"},datetime:{pattern:o(\"\\\\d{4}-\\\\d\\\\d?-\\\\d\\\\d?(?:[tT]|[ \\t]+)\\\\d\\\\d?:\\\\d{2}:\\\\d{2}(?:\\\\.\\\\d*)?(?:[ \\t]*(?:Z|[-+]\\\\d\\\\d?(?::\\\\d{2})?))?|\\\\d{4}-\\\\d{2}-\\\\d{2}|\\\\d\\\\d?:\\\\d{2}(?::\\\\d{2}(?:\\\\.\\\\d*)?)?\"),lookbehind:!0,alias:\"number\"},boolean:{pattern:o(\"false|true\",\"i\"),lookbehind:!0,alias:\"important\"},null:{pattern:o(\"null|~\",\"i\"),lookbehind:!0,alias:\"important\"},string:{pattern:o(d),lookbehind:!0,greedy:!0},number:{pattern:o(\"[+-]?(?:0x[\\\\da-f]+|0o[0-7]+|(?:\\\\d+(?:\\\\.\\\\d*)?|\\\\.\\\\d+)(?:e[+-]?\\\\d+)?|\\\\.inf|\\\\.nan)\",\"i\"),lookbehind:!0},tag:r,important:n,punctuation:/---|[:[\\]{}\\-,|>?]|\\.\\.\\./},e.languages.yml=e.languages.yaml}(Prism);\n!function(){if(\"undefined\"!=typeof Prism&&\"undefined\"!=typeof document){var e=\"line-numbers\",n=/\\n(?!$)/g,t=Prism.plugins.lineNumbers={getLine:function(n,t){if(\"PRE\"===n.tagName&&n.classList.contains(e)){var i=n.querySelector(\".line-numbers-rows\");if(i){var r=parseInt(n.getAttribute(\"data-start\"),10)||1,s=r+(i.children.length-1);t<r&&(t=r),t>s&&(t=s);var l=t-r;return i.children[l]}}},resize:function(e){r([e])},assumeViewportIndependence:!0},i=void 0;window.addEventListener(\"resize\",(function(){t.assumeViewportIndependence&&i===window.innerWidth||(i=window.innerWidth,r(Array.prototype.slice.call(document.querySelectorAll(\"pre.line-numbers\"))))})),Prism.hooks.add(\"complete\",(function(t){if(t.code){var i=t.element,s=i.parentNode;if(s&&/pre/i.test(s.nodeName)&&!i.querySelector(\".line-numbers-rows\")&&Prism.util.isActive(i,e)){i.classList.remove(e),s.classList.add(e);var l,o=t.code.match(n),a=o?o.length+1:1,u=new Array(a+1).join(\"<span></span>\");(l=document.createElement(\"span\")).setAttribute(\"aria-hidden\",\"true\"),l.className=\"line-numbers-rows\",l.innerHTML=u,s.hasAttribute(\"data-start\")&&(s.style.counterReset=\"linenumber \"+(parseInt(s.getAttribute(\"data-start\"),10)-1)),t.element.appendChild(l),r([s]),Prism.hooks.run(\"line-numbers\",t)}}})),Prism.hooks.add(\"line-numbers\",(function(e){e.plugins=e.plugins||{},e.plugins.lineNumbers=!0}))}function r(e){if(0!=(e=e.filter((function(e){var n,t=(n=e,n?window.getComputedStyle?getComputedStyle(n):n.currentStyle||null:null)[\"white-space\"];return\"pre-wrap\"===t||\"pre-line\"===t}))).length){var t=e.map((function(e){var t=e.querySelector(\"code\"),i=e.querySelector(\".line-numbers-rows\");if(t&&i){var r=e.querySelector(\".line-numbers-sizer\"),s=t.textContent.split(n);r||((r=document.createElement(\"span\")).className=\"line-numbers-sizer\",t.appendChild(r)),r.innerHTML=\"0\",r.style.display=\"block\";var l=r.getBoundingClientRect().height;return r.innerHTML=\"\",{element:e,lines:s,lineHeights:[],oneLinerHeight:l,sizer:r}}})).filter(Boolean);t.forEach((function(e){var n=e.sizer,t=e.lines,i=e.lineHeights,r=e.oneLinerHeight;i[t.length-1]=void 0,t.forEach((function(e,t){if(e&&e.length>1){var s=n.appendChild(document.createElement(\"span\"));s.style.display=\"block\",s.textContent=e}else i[t]=r}))})),t.forEach((function(e){for(var n=e.sizer,t=e.lineHeights,i=0,r=0;r<t.length;r++)void 0===t[r]&&(t[r]=n.children[i++].getBoundingClientRect().height)})),t.forEach((function(e){var n=e.sizer,t=e.element.querySelector(\".line-numbers-rows\");n.style.display=\"none\",n.innerHTML=\"\",e.lineHeights.forEach((function(e,n){t.children[n].style.height=e+\"px\"}))}))}}}();\n","/* eslint-env browser */\n\n/**\n * Infinite Scroll\n * Used on all pages where there is a list of posts (homepage, tag index, etc).\n *\n * When the page is scrolled to 300px from the bottom, the next page of posts\n * is fetched by following the the <link rel=\"next\" href=\"...\"> that is output\n * by {{ghost_head}}.\n *\n * The individual post items are extracted from the fetched pages by looking for\n * a wrapper element with the class \"post-card\". Any found elements are appended\n * to the element with the class \"post-feed\" in the currently viewed page.\n */\n\n(function (window, document) {\n    // next link element\n    var nextElement = document.querySelector('link[rel=next]');\n    if (!nextElement) {\n        return;\n    }\n\n    // post feed element\n    var feedElement = document.querySelector('.post-feed');\n    if (!feedElement) {\n        return;\n    }\n\n    var buffer = 300;\n\n    var ticking = false;\n    var loading = false;\n\n    var lastScrollY = window.scrollY;\n    var lastWindowHeight = window.innerHeight;\n    var lastDocumentHeight = document.documentElement.scrollHeight;\n\n    function onPageLoad() {\n        if (this.status === 404) {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n            return;\n        }\n\n        // append contents\n        var postElements = this.response.querySelectorAll('article.post-card');\n        postElements.forEach(function (item) {\n            // document.importNode is important, without it the item's owner\n            // document will be different which can break resizing of\n            // `object-fit: cover` images in Safari\n            feedElement.appendChild(document.importNode(item, true));\n        });\n\n        // set next link\n        var resNextElement = this.response.querySelector('link[rel=next]');\n        if (resNextElement) {\n            nextElement.href = resNextElement.href;\n        } else {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n        }\n\n        // sync status\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        ticking = false;\n        loading = false;\n    }\n\n    function onUpdate() {\n        // return if already loading\n        if (loading) {\n            return;\n        }\n\n        // return if not scroll to the bottom\n        if (lastScrollY + lastWindowHeight <= lastDocumentHeight - buffer) {\n            ticking = false;\n            return;\n        }\n\n        loading = true;\n\n        var xhr = new window.XMLHttpRequest();\n        xhr.responseType = 'document';\n\n        xhr.addEventListener('load', onPageLoad);\n\n        xhr.open('GET', nextElement.href);\n        xhr.send(null);\n    }\n\n    function requestTick() {\n        ticking || window.requestAnimationFrame(onUpdate);\n        ticking = true;\n    }\n\n    function onScroll() {\n        lastScrollY = window.scrollY;\n        requestTick();\n    }\n\n    function onResize() {\n        lastWindowHeight = window.innerHeight;\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        requestTick();\n    }\n\n    window.addEventListener('scroll', onScroll, {passive: true});\n    window.addEventListener('resize', onResize);\n\n    requestTick();\n})(window, document);\n"]}